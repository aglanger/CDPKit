# -*- mode: CMake -*-

##
# InstallExternalRuntimeDependencies.cmake.in
#
# This file is part of the Chemical Data Processing Toolkit
#
# Copyright (C) 2003-2010 Thomas A. Seidel <thomas.seidel@univie.ac.at>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program; see the file COPYING. If not, write to
# the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.
##

SET(BINARY_INPUT_FILE "@BINARY_INPUT_FILE@")
SET(CDPKIT_LIBRARY_INSTALL_DIR "@CDPKIT_LIBRARY_INSTALL_DIR@")

IF(COMMAND CMAKE_POLICY)
  CMAKE_POLICY(SET CMP0011 NEW)
  CMAKE_POLICY(SET CMP0007 NEW)
ENDIF(COMMAND CMAKE_POLICY)

MACRO(INSTALL_LINKED_LIBRARIES BINARY_FILE DID_INSTALL)
  SET(ALLOWED_LIBRARIES
      "libQt5Core"
      "libQt5Gui"
      "libQt5PrintSupport"
      "libQt5Widgets"
      "libboost_date_time"
      "libboost_python"
      "libboost_thread"
      "libboost_system"
      "libboost_atomic"
      "libboost_filesystem"
      "libboost_iostreams"
      "libboost_chrono"
      "libboost_timer"
      "libboost_program_options"
      "libbz2"
      "libz"
      "libpng"
      "libsqlite3"
      "libcairo"
      "libicu"
      )

  SET(LDD_OUTPUT "")
  SET(LDD_ERROR "")

  EXECUTE_PROCESS(COMMAND "${LDD_EXECUTABLE}" "${BINARY_FILE}" OUTPUT_VARIABLE LDD_OUTPUT ERROR_VARIABLE LDD_ERROR)

  IF(NOT LDD_ERROR)
    STRING(REPLACE "\t" "" LDD_OUTPUT "${LDD_OUTPUT}") 
    STRING(REPLACE " " "" LDD_OUTPUT "${LDD_OUTPUT}") 
    STRING(REGEX REPLACE "[A-Za-z0-9+._-]+=>" "" LDD_OUTPUT "${LDD_OUTPUT}")
    STRING(REGEX REPLACE "\\(0x[0-9a-f]+\\)" "" LDD_OUTPUT "${LDD_OUTPUT}") 
    STRING(REPLACE "\n" ";" LDD_OUTPUT "${LDD_OUTPUT}") 

    LIST(REMOVE_ITEM LDD_OUTPUT "notfound")
    LIST(REMOVE_ITEM LDD_OUTPUT "notadynamicexecutable")

    FOREACH(LIBRARY ${LDD_OUTPUT})
      #MESSAGE("-- Found Dependency: ${LIBRARY}")
      GET_FILENAME_COMPONENT(LIB_FILE_NAME "${LIBRARY}" NAME)

      FOREACH(LIB_PATTERN ${ALLOWED_LIBRARIES})
        IF(LIB_FILE_NAME MATCHES "${LIB_PATTERN}")
          IF(NOT EXISTS "${CMAKE_INSTALL_PREFIX}/${CDPKIT_LIBRARY_INSTALL_DIR}/${LIB_FILE_NAME}")
            MESSAGE("-- Installing External Dependency: ${LIBRARY}")
            CONFIGURE_FILE("${LIBRARY}"
                           "${CMAKE_INSTALL_PREFIX}/${CDPKIT_LIBRARY_INSTALL_DIR}/${LIB_FILE_NAME}"
                           COPYONLY
                          )
            SET(${DID_INSTALL} 1)
          ENDIF(NOT EXISTS "${CMAKE_INSTALL_PREFIX}/${CDPKIT_LIBRARY_INSTALL_DIR}/${LIB_FILE_NAME}")
        ENDIF(LIB_FILE_NAME MATCHES "${LIB_PATTERN}")
      ENDFOREACH(LIB_PATTERN)
    ENDFOREACH(LIBRARY)
  ENDIF(NOT LDD_ERROR)
ENDMACRO(INSTALL_LINKED_LIBRARIES)

STRING(REGEX MATCH "CPack" IN_CPACK_INSTALL "${CMAKE_INSTALL_PREFIX}")

IF(NOT IN_CPACK_INSTALL)
  RETURN()
ENDIF(NOT IN_CPACK_INSTALL)

FIND_PROGRAM(LDD_EXECUTABLE ldd)

IF(NOT LDD_EXECUTABLE)
  MESSAGE("!! Warning: ldd command not found -> can't determine external dependencies.")
  RETURN()
ENDIF(NOT LDD_EXECUTABLE)

MESSAGE("- Processing Binary: ${BINARY_INPUT_FILE}")
INSTALL_LINKED_LIBRARIES("${BINARY_INPUT_FILE}" DUMMY)
