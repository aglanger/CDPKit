/* -*- mode: java; tab-width: 4 -*- */

package CDPL.Chem;

/**
 * \brief MassComposition.
 */
public class MassComposition extends Boost.Python.instance {

	/**
	 * \brief __init__.
	 * \param self The <tt>%MassComposition</tt> instance.
	 */
	public None __init__(object self) {}

	/**
	 * \brief __init__.
	 * \param self The <tt>%MassComposition</tt> instance.
	 */
	public None __init__(object self, MassComposition mass_comp) {}

	/**
	 * \brief getObjectID.
	 * \param self The <tt>%MassComposition</tt> instance.
	 */
	public int getObjectID(MassComposition self) {}

	/**
	 * \brief getValues.
	 * \param self The <tt>%MassComposition</tt> instance.
	 */
	public object getValues(MassComposition self) {}

	/**
	 * \brief getSize.
	 * \param self The <tt>%MassComposition</tt> instance.
	 */
	public int getSize(MassComposition self) {}

	/**
	 * \brief containsEntry.
	 * \param self The <tt>%MassComposition</tt> instance.
	 */
	public bool containsEntry(MassComposition self, int key) {}

	/**
	 * \brief isEmpty.
	 * \param self The <tt>%MassComposition</tt> instance.
	 */
	public bool isEmpty(MassComposition self) {}

	/**
	 * \brief removeEntry.
	 * \param self The <tt>%MassComposition</tt> instance.
	 */
	public bool removeEntry(MassComposition self, int key) {}

	/**
	 * \brief setEntry.
	 * \param self The <tt>%MassComposition</tt> instance.
	 */
	public None setEntry(MassComposition self, int key, float value) {}

	/**
	 * \brief getKeys.
	 * \param self The <tt>%MassComposition</tt> instance.
	 */
	public object getKeys(MassComposition self) {}

	/**
	 * \brief getEntries.
	 * \param self The <tt>%MassComposition</tt> instance.
	 */
	public object getEntries(MassComposition self) {}

	/**
	 * \brief clear.
	 * \param self The <tt>%MassComposition</tt> instance.
	 */
	public None clear(MassComposition self) {}

	/**
	 * \brief getValue.
	 * \param self The <tt>%MassComposition</tt> instance.
	 */
	public float getValue(MassComposition self, int key) {}

	/**
	 * \brief getValue.
	 * \param self The <tt>%MassComposition</tt> instance.
	 */
	public float getValue(MassComposition self, int key, float def_value) {}

	/**
	 * \brief insertEntry.
	 * \param self The <tt>%MassComposition</tt> instance.
	 */
	public bool insertEntry(MassComposition self, int key, float value) {}

	/**
	 * \brief assign.
	 * \param self The <tt>%MassComposition</tt> instance.
	 */
	public MassComposition assign(MassComposition self, MassComposition map) {}

	/**
	 * \brief __lt__.
	 * \param self The <tt>%MassComposition</tt> instance.
	 */
	public bool __lt__(MassComposition self, MassComposition mass_comp) {}

	/**
	 * \brief __contains__.
	 * \param self The <tt>%MassComposition</tt> instance.
	 */
	public bool __contains__(MassComposition self, int key) {}

	/**
	 * \brief __len__.
	 * \param self The <tt>%MassComposition</tt> instance.
	 */
	public int __len__(MassComposition self) {}

	/**
	 * \brief __ne__.
	 * \param self The <tt>%MassComposition</tt> instance.
	 */
	public bool __ne__(MassComposition self, MassComposition mass_comp) {}

	/**
	 * \brief __getitem__.
	 * \param self The <tt>%MassComposition</tt> instance.
	 */
	public float __getitem__(MassComposition self, int key) {}

	/**
	 * \brief __setitem__.
	 * \param self The <tt>%MassComposition</tt> instance.
	 */
	public None __setitem__(MassComposition self, int key, float value) {}

	/**
	 * \brief __gt__.
	 * \param self The <tt>%MassComposition</tt> instance.
	 */
	public bool __gt__(MassComposition self, MassComposition mass_comp) {}

	/**
	 * \brief __eq__.
	 * \param self The <tt>%MassComposition</tt> instance.
	 */
	public bool __eq__(MassComposition self, MassComposition mass_comp) {}

	/**
	 * \brief __delitem__.
	 * \param self The <tt>%MassComposition</tt> instance.
	 */
	public bool __delitem__(MassComposition self, int key) {}

	/**
	 * \brief __le__.
	 * \param self The <tt>%MassComposition</tt> instance.
	 */
	public bool __le__(MassComposition self, MassComposition mass_comp) {}

	/**
	 * \brief __ge__.
	 * \param self The <tt>%MassComposition</tt> instance.
	 */
	public bool __ge__(MassComposition self, MassComposition mass_comp) {}

	/**
	 * \brief objectID.
	 */
	public None objectID;

	/**
	 * \brief size.
	 */
	public None size;
}
