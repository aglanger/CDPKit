/* -*- mode: java; tab-width: 4 -*- */

package CDPL.Chem;

/**
 * \brief Reaction.
 */
public class Reaction extends Base.PropertyContainer {

	/**
	 * \brief ComponentSequence.
	 */
	public class ComponentSequence extends Boost.Python.instance {

		/**
		 * \brief __delitem__.
		 * \param self The <tt>%ComponentSequence</tt> instance.
		 */
		public None __delitem__(ComponentSequence self, int idx) {}

		/**
		 * \brief __getitem__.
		 * \param self The <tt>%ComponentSequence</tt> instance.
		 */
		public Molecule __getitem__(ComponentSequence self, int idx) {}

		/**
		 * \brief __contains__.
		 * \param self The <tt>%ComponentSequence</tt> instance.
		 */
		public bool __contains__(ComponentSequence self, Molecule mol) {}

		/**
		 * \brief __len__.
		 * \param self The <tt>%ComponentSequence</tt> instance.
		 */
		public int __len__(ComponentSequence self) {}
	}

	/**
	 * \brief __init__.
	 * \param self The <tt>%Reaction</tt> instance.
	 */
	public None __init__(object self) {}

	/**
	 * \brief removeComponents.
	 * \param self The <tt>%Reaction</tt> instance.
	 */
	public None removeComponents(Reaction self, int role) {}

	/**
	 * \brief addComponent.
	 * \param self The <tt>%Reaction</tt> instance.
	 */
	public Molecule addComponent(Reaction self, int role) {}

	/**
	 * \brief getReactants.
	 * \param self The <tt>%Reaction</tt> instance.
	 */
	public ComponentSequence getReactants(Reaction self) {}

	/**
	 * \brief containsComponent.
	 * \param self The <tt>%Reaction</tt> instance.
	 */
	public bool containsComponent(Reaction self, Molecule mol) {}

	/**
	 * \brief getComponentIndex.
	 * \param self The <tt>%Reaction</tt> instance.
	 */
	public int getComponentIndex(Reaction self, Molecule mol) {}

	/**
	 * \brief getAgents.
	 * \param self The <tt>%Reaction</tt> instance.
	 */
	public ComponentSequence getAgents(Reaction self) {}

	/**
	 * \brief clearProperties.
	 * \param self The <tt>%Reaction</tt> instance.
	 */
	public None clearProperties(Reaction self) {}

	/**
	 * \brief isPropertySet.
	 * \param self The <tt>%Reaction</tt> instance.
	 */
	public bool isPropertySet(Reaction self, Base.LookupKey key) {}

	/**
	 * \brief removeComponent.
	 * \param self The <tt>%Reaction</tt> instance.
	 */
	public None removeComponent(Reaction self, int idx, int role) {}

	/**
	 * \brief removeComponent.
	 * \param self The <tt>%Reaction</tt> instance.
	 */
	public None removeComponent(Reaction self, int idx) {}

	/**
	 * \brief getComponent.
	 * \param self The <tt>%Reaction</tt> instance.
	 */
	public Molecule getComponent(Reaction self, int idx, int role) {}

	/**
	 * \brief getComponent.
	 * \param self The <tt>%Reaction</tt> instance.
	 */
	public Molecule getComponent(Reaction self, int idx) {}

	/**
	 * \brief getNumComponents.
	 * \param self The <tt>%Reaction</tt> instance.
	 */
	public int getNumComponents(Reaction self, int role) {}

	/**
	 * \brief getNumComponents.
	 * \param self The <tt>%Reaction</tt> instance.
	 */
	public int getNumComponents(Reaction self) {}

	/**
	 * \brief clone.
	 * \param self The <tt>%Reaction</tt> instance.
	 */
	public Reaction clone(Reaction self) {}

	/**
	 * \brief copyProperties.
	 * \param self The <tt>%Reaction</tt> instance.
	 */
	public None copyProperties(Base.PropertyContainer self, Base.PropertyContainer cntnr) {}

	/**
	 * \brief getComponentRole.
	 * \param self The <tt>%Reaction</tt> instance.
	 */
	public int getComponentRole(Reaction self, Molecule mol) {}

	/**
	 * \brief setProperty.
	 * \param self The <tt>%Reaction</tt> instance.
	 */
	public None setProperty(Reaction self, Base.LookupKey key, Base.Variant value) {}

	/**
	 * \brief copy.
	 * \param self The <tt>%Reaction</tt> instance.
	 */
	public None copy(Reaction self, Reaction rxn) {}

	/**
	 * \brief addProperties.
	 * \param self The <tt>%Reaction</tt> instance.
	 */
	public None addProperties(Base.PropertyContainer self, Base.PropertyContainer cntnr) {}

	/**
	 * \brief getProperty.
	 * \param self The <tt>%Reaction</tt> instance.
	 */
	public Base.Variant getProperty(Reaction self, Base.LookupKey key, bool throw_ = False) {}

	/**
	 * \brief swapComponentRoles.
	 * \param self The <tt>%Reaction</tt> instance.
	 */
	public None swapComponentRoles(Reaction self, int role1, int role2) {}

	/**
	 * \brief clear.
	 * \param self The <tt>%Reaction</tt> instance.
	 */
	public None clear(Reaction self) {}

	/**
	 * \brief getProducts.
	 * \param self The <tt>%Reaction</tt> instance.
	 */
	public ComponentSequence getProducts(Reaction self) {}

	/**
	 * \brief assign.
	 * \param self The <tt>%Reaction</tt> instance.
	 */
	public Reaction assign(Reaction self, Reaction rxn) {}

	/**
	 * \brief removeProperty.
	 * \param self The <tt>%Reaction</tt> instance.
	 */
	public bool removeProperty(Reaction self, Base.LookupKey key) {}

	/**
	 * \brief __contains__.
	 * \param self The <tt>%Reaction</tt> instance.
	 */
	public bool __contains__(Reaction self, Molecule mol) {}

	/**
	 * \brief __contains__.
	 * \param self The <tt>%Reaction</tt> instance.
	 */
	public bool __contains__(Reaction self, Base.LookupKey key) {}

	/**
	 * \brief __len__.
	 * \param self The <tt>%Reaction</tt> instance.
	 */
	public int __len__(Reaction self) {}

	/**
	 * \brief __getitem__.
	 * \param self The <tt>%Reaction</tt> instance.
	 */
	public Molecule __getitem__(Reaction self, int idx) {}

	/**
	 * \brief __getitem__.
	 * \param self The <tt>%Reaction</tt> instance.
	 */
	public Base.Variant __getitem__(Base.PropertyContainer self, Base.LookupKey key) {}

	/**
	 * \brief __delitem__.
	 * \param self The <tt>%Reaction</tt> instance.
	 */
	public None __delitem__(Reaction self, int idx) {}

	/**
	 * \brief __delitem__.
	 * \param self The <tt>%Reaction</tt> instance.
	 */
	public bool __delitem__(Reaction self, Base.LookupKey key) {}

	/**
	 * \brief __setitem__.
	 * \param self The <tt>%Reaction</tt> instance.
	 */
	public None __setitem__(Reaction self, Base.LookupKey key, Base.Variant value) {}

	/**
	 * \brief numProducts.
	 */
	public None numProducts;

	/**
	 * \brief agents.
	 */
	public None agents;

	/**
	 * \brief numReactants.
	 */
	public None numReactants;

	/**
	 * \brief numComponents.
	 */
	public None numComponents;

	/**
	 * \brief reactants.
	 */
	public None reactants;

	/**
	 * \brief numAgents.
	 */
	public None numAgents;

	/**
	 * \brief products.
	 */
	public None products;
}
