/* -*- mode: java; tab-width: 4 -*- */

package CDPL.Base;

/**
 * \brief ControlParameterContainer.
 */
public class ControlParameterContainer extends Boost.Python.instance {

	/**
	 * \brief __init__.
	 * \param self The <tt>%ControlParameterContainer</tt> instance.
	 */
	public None __init__(object self) {}

	/**
	 * \brief addParameters.
	 * \param self The <tt>%ControlParameterContainer</tt> instance.
	 */
	public None addParameters(ControlParameterContainer self, ControlParameterContainer cntnr) {}

	/**
	 * \brief getObjectID.
	 * \param self The <tt>%ControlParameterContainer</tt> instance.
	 */
	public int getObjectID(ControlParameterContainer self) {}

	/**
	 * \brief registerParameterRemovedCallback.
	 * \param self The <tt>%ControlParameterContainer</tt> instance.
	 */
	public int registerParameterRemovedCallback(ControlParameterContainer self, object func) {}

	/**
	 * \brief removeParameter.
	 * \param self The <tt>%ControlParameterContainer</tt> instance.
	 */
	public bool removeParameter(ControlParameterContainer self, LookupKey key) {}

	/**
	 * \brief setParameter.
	 * \param self The <tt>%ControlParameterContainer</tt> instance.
	 */
	public None setParameter(ControlParameterContainer self, LookupKey key, Variant value) {}

	/**
	 * \brief getParameterOrDefault.
	 * \param self The <tt>%ControlParameterContainer</tt> instance.
	 */
	public Variant getParameterOrDefault(ControlParameterContainer self, LookupKey key, Variant def_value, bool local = False) {}

	/**
	 * \brief clearParameters.
	 * \param self The <tt>%ControlParameterContainer</tt> instance.
	 */
	public None clearParameters(ControlParameterContainer self) {}

	/**
	 * \brief setParent.
	 * \param self The <tt>%ControlParameterContainer</tt> instance.
	 */
	public None setParent(ControlParameterContainer self, ControlParameterContainer cntnr) {}

	/**
	 * \brief unregisterParameterRemovedCallback.
	 * \param self The <tt>%ControlParameterContainer</tt> instance.
	 */
	public None unregisterParameterRemovedCallback(ControlParameterContainer self, int id) {}

	/**
	 * \brief getParameter.
	 * \param self The <tt>%ControlParameterContainer</tt> instance.
	 */
	public Variant getParameter(ControlParameterContainer self, LookupKey key, bool throw_ = False, bool local = False) {}

	/**
	 * \brief getNumParameters.
	 * \param self The <tt>%ControlParameterContainer</tt> instance.
	 */
	public int getNumParameters(ControlParameterContainer self) {}

	/**
	 * \brief registerParameterChangedCallback.
	 * \param self The <tt>%ControlParameterContainer</tt> instance.
	 */
	public int registerParameterChangedCallback(ControlParameterContainer self, object func) {}

	/**
	 * \brief unregisterParentChangedCallback.
	 * \param self The <tt>%ControlParameterContainer</tt> instance.
	 */
	public None unregisterParentChangedCallback(ControlParameterContainer self, int id) {}

	/**
	 * \brief getParameterValues.
	 * \param self The <tt>%ControlParameterContainer</tt> instance.
	 */
	public list getParameterValues(ControlParameterContainer self) {}

	/**
	 * \brief registerParentChangedCallback.
	 * \param self The <tt>%ControlParameterContainer</tt> instance.
	 */
	public int registerParentChangedCallback(ControlParameterContainer self, object func) {}

	/**
	 * \brief unregisterParameterChangedCallback.
	 * \param self The <tt>%ControlParameterContainer</tt> instance.
	 */
	public None unregisterParameterChangedCallback(ControlParameterContainer self, int id) {}

	/**
	 * \brief getParameters.
	 * \param self The <tt>%ControlParameterContainer</tt> instance.
	 */
	public list getParameters(ControlParameterContainer self) {}

	/**
	 * \brief isParameterSet.
	 * \param self The <tt>%ControlParameterContainer</tt> instance.
	 */
	public bool isParameterSet(ControlParameterContainer self, LookupKey key, bool local = False) {}

	/**
	 * \brief getParent.
	 * \param self The <tt>%ControlParameterContainer</tt> instance.
	 */
	public ControlParameterContainer getParent(ControlParameterContainer self) {}

	/**
	 * \brief getParameterKeys.
	 * \param self The <tt>%ControlParameterContainer</tt> instance.
	 */
	public list getParameterKeys(ControlParameterContainer self) {}

	/**
	 * \brief copyParameters.
	 * \param self The <tt>%ControlParameterContainer</tt> instance.
	 */
	public None copyParameters(ControlParameterContainer self, ControlParameterContainer cntnr) {}

	/**
	 * \brief __getitem__.
	 * \param self The <tt>%ControlParameterContainer</tt> instance.
	 */
	public Variant __getitem__(ControlParameterContainer self, LookupKey key) {}

	/**
	 * \brief __delitem__.
	 * \param self The <tt>%ControlParameterContainer</tt> instance.
	 */
	public bool __delitem__(ControlParameterContainer arg1, LookupKey self) {}

	/**
	 * \brief __len__.
	 * \param self The <tt>%ControlParameterContainer</tt> instance.
	 */
	public int __len__(ControlParameterContainer self) {}

	/**
	 * \brief __setitem__.
	 * \param self The <tt>%ControlParameterContainer</tt> instance.
	 */
	public None __setitem__(ControlParameterContainer self, LookupKey key, Variant value) {}

	/**
	 * \brief __contains__.
	 * \param self The <tt>%ControlParameterContainer</tt> instance.
	 */
	public bool __contains__(ControlParameterContainer arg1, LookupKey self, bool key) {}

	/**
	 * \brief objectID.
	 */
	public None objectID;

	/**
	 * \brief parameters.
	 */
	public None parameters;

	/**
	 * \brief numParameters.
	 */
	public None numParameters;

	/**
	 * \brief parent.
	 */
	public None parent;

	/**
	 * \brief parameterValues.
	 */
	public None parameterValues;

	/**
	 * \brief parameterKeys.
	 */
	public None parameterKeys;
}
