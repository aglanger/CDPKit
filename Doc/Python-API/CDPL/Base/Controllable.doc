/* -*- mode: java; tab-width: 4 -*- */

package CDPL.Base;

/**
 * \brief Controllable.
 */
public class Controllable extends Boost.Python.instance {

	/**
	 * \brief setParameters.
	 * \param self The <tt>%Controllable</tt> instance.
	 */
	public None setParameters(Controllable self, ControlParameterList cpl) {}

	/**
	 * \brief getObjectID.
	 * \param self The <tt>%Controllable</tt> instance.
	 */
	public int getObjectID(Controllable self) {}

	/**
	 * \brief registerParameterRemovedCallback.
	 * \param self The <tt>%Controllable</tt> instance.
	 */
	public int registerParameterRemovedCallback(Controllable self, object func) {}

	/**
	 * \brief removeParameter.
	 * \param self The <tt>%Controllable</tt> instance.
	 */
	public bool removeParameter(Controllable self, ControlParameterKey key) {}

	/**
	 * \brief setParameter.
	 * \param self The <tt>%Controllable</tt> instance.
	 */
	public None setParameter(Controllable self, ControlParameterKey key, Variant value) {}

	/**
	 * \brief getParameterOrDefault.
	 * \param self The <tt>%Controllable</tt> instance.
	 */
	public Variant getParameterOrDefault(Controllable self, ControlParameterKey key, Variant def_value, bool local = False) {}

	/**
	 * \brief clearParameters.
	 * \param self The <tt>%Controllable</tt> instance.
	 */
	public None clearParameters(Controllable self) {}

	/**
	 * \brief setParent.
	 * \param self The <tt>%Controllable</tt> instance.
	 */
	public None setParent(Controllable self, ControlParameterList cpl) {}

	/**
	 * \brief setParent.
	 * \param self The <tt>%Controllable</tt> instance.
	 */
	public None setParent(Controllable self, Controllable controllable) {}

	/**
	 * \brief unregisterParameterRemovedCallback.
	 * \param self The <tt>%Controllable</tt> instance.
	 */
	public None unregisterParameterRemovedCallback(Controllable self, int id) {}

	/**
	 * \brief getParameter.
	 * \param self The <tt>%Controllable</tt> instance.
	 */
	public Variant getParameter(Controllable self, ControlParameterKey key, bool throw_ = False, bool local = False) {}

	/**
	 * \brief getNumParameters.
	 * \param self The <tt>%Controllable</tt> instance.
	 */
	public int getNumParameters(Controllable self) {}

	/**
	 * \brief registerParameterChangedCallback.
	 * \param self The <tt>%Controllable</tt> instance.
	 */
	public int registerParameterChangedCallback(Controllable self, object func) {}

	/**
	 * \brief unregisterParentChangedCallback.
	 * \param self The <tt>%Controllable</tt> instance.
	 */
	public None unregisterParentChangedCallback(Controllable self, int id) {}

	/**
	 * \brief registerParentChangedCallback.
	 * \param self The <tt>%Controllable</tt> instance.
	 */
	public int registerParentChangedCallback(Controllable self, object func) {}

	/**
	 * \brief unregisterParameterChangedCallback.
	 * \param self The <tt>%Controllable</tt> instance.
	 */
	public None unregisterParameterChangedCallback(Controllable self, int id) {}

	/**
	 * \brief getParameters.
	 * \param self The <tt>%Controllable</tt> instance.
	 */
	public ControlParameterList getParameters(Controllable self) {}

	/**
	 * \brief isParameterSet.
	 * \param self The <tt>%Controllable</tt> instance.
	 */
	public bool isParameterSet(ControlParameterList self, ControlParameterKey key, bool local = False) {}

	/**
	 * \brief getParent.
	 * \param self The <tt>%Controllable</tt> instance.
	 */
	public ControlParameterList getParent(Controllable self) {}

	/**
	 * \brief __contains__.
	 * \param self The <tt>%Controllable</tt> instance.
	 */
	public bool __contains__(Controllable arg1, ControlParameterKey self, bool key) {}

	/**
	 * \brief __getitem__.
	 * \param self The <tt>%Controllable</tt> instance.
	 */
	public Variant __getitem__(Controllable self, ControlParameterKey key) {}

	/**
	 * \brief __delitem__.
	 * \param self The <tt>%Controllable</tt> instance.
	 */
	public bool __delitem__(Controllable self, ControlParameterKey key) {}

	/**
	 * \brief __setitem__.
	 * \param self The <tt>%Controllable</tt> instance.
	 */
	public None __setitem__(Controllable self, ControlParameterKey key, Variant value) {}

	/**
	 * \brief objectID.
	 */
	public None objectID;

	/**
	 * \brief parent.
	 */
	public None parent;

	/**
	 * \brief parameters.
	 */
	public None parameters;

	/**
	 * \brief numParameters.
	 */
	public None numParameters;
}
