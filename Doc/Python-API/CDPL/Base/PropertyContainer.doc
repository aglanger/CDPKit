/* -*- mode: java; tab-width: 4 -*- */

package CDPL.Base;

/**
 * \brief PropertyContainer.
 */
public class PropertyContainer extends Boost.Python.instance {

	/**
	 * \brief __init__.
	 * \param self The <tt>%PropertyContainer</tt> instance.
	 */
	public None __init__(object self) {}

	/**
	 * \brief getObjectID.
	 * \param self The <tt>%PropertyContainer</tt> instance.
	 */
	public int getObjectID(PropertyContainer self) {}

	/**
	 * \brief getPropertyValues.
	 * \param self The <tt>%PropertyContainer</tt> instance.
	 */
	public list getPropertyValues(PropertyContainer self) {}

	/**
	 * \brief clearProperties.
	 * \param self The <tt>%PropertyContainer</tt> instance.
	 */
	public None clearProperties(PropertyContainer self) {}

	/**
	 * \brief getPropertyKeys.
	 * \param self The <tt>%PropertyContainer</tt> instance.
	 */
	public list getPropertyKeys(PropertyContainer self) {}

	/**
	 * \brief isPropertySet.
	 * \param self The <tt>%PropertyContainer</tt> instance.
	 */
	public bool isPropertySet(PropertyContainer self, LookupKey key) {}

	/**
	 * \brief getNumProperties.
	 * \param self The <tt>%PropertyContainer</tt> instance.
	 */
	public int getNumProperties(PropertyContainer self) {}

	/**
	 * \brief removeProperty.
	 * \param self The <tt>%PropertyContainer</tt> instance.
	 */
	public bool removeProperty(PropertyContainer self, LookupKey key) {}

	/**
	 * \brief setProperty.
	 * \param self The <tt>%PropertyContainer</tt> instance.
	 */
	public None setProperty(PropertyContainer self, LookupKey key, Variant value) {}

	/**
	 * \brief addProperties.
	 * \param self The <tt>%PropertyContainer</tt> instance.
	 */
	public None addProperties(PropertyContainer self, PropertyContainer cntnr) {}

	/**
	 * \brief getProperty.
	 * \param self The <tt>%PropertyContainer</tt> instance.
	 */
	public Variant getProperty(PropertyContainer self, LookupKey key, bool throw_ = False) {}

	/**
	 * \brief copyProperties.
	 * \param self The <tt>%PropertyContainer</tt> instance.
	 */
	public None copyProperties(PropertyContainer self, PropertyContainer cntnr) {}

	/**
	 * \brief getProperties.
	 * \param self The <tt>%PropertyContainer</tt> instance.
	 */
	public list getProperties(PropertyContainer self) {}

	/**
	 * \brief getPropertyOrDefault.
	 * \param self The <tt>%PropertyContainer</tt> instance.
	 */
	public Variant getPropertyOrDefault(PropertyContainer self, LookupKey key, Variant def_value) {}

	/**
	 * \brief __contains__.
	 * \param self The <tt>%PropertyContainer</tt> instance.
	 */
	public bool __contains__(PropertyContainer self, LookupKey key) {}

	/**
	 * \brief __len__.
	 * \param self The <tt>%PropertyContainer</tt> instance.
	 */
	public int __len__(PropertyContainer self) {}

	/**
	 * \brief __getitem__.
	 * \param self The <tt>%PropertyContainer</tt> instance.
	 */
	public Variant __getitem__(PropertyContainer self, LookupKey key) {}

	/**
	 * \brief __setitem__.
	 * \param self The <tt>%PropertyContainer</tt> instance.
	 */
	public None __setitem__(PropertyContainer self, LookupKey key, Variant value) {}

	/**
	 * \brief __delitem__.
	 * \param self The <tt>%PropertyContainer</tt> instance.
	 */
	public bool __delitem__(PropertyContainer self, LookupKey key) {}

	/**
	 * \brief objectID.
	 */
	public None objectID;

	/**
	 * \brief numProperties.
	 */
	public None numProperties;

	/**
	 * \brief propertyValues.
	 */
	public None propertyValues;

	/**
	 * \brief properties.
	 */
	public None properties;

	/**
	 * \brief propertyKeys.
	 */
	public None propertyKeys;
}
