/* -*- mode: java; tab-width: 4 -*- */

package CDPL.Math;

/**
 * \brief DQuaternionVectorAdapter.
 */
public class DQuaternionVectorAdapter extends Boost.Python.instance {

	/**
	 * \brief __init__.
	 * \param self The <tt>%DQuaternionVectorAdapter</tt> instance.
	 */
	public None __init__(object self, DQuaternionVectorAdapter a) {}

	/**
	 * \brief __init__.
	 * \param self The <tt>%DQuaternionVectorAdapter</tt> instance.
	 */
	public None __init__(object self, DQuaternionExpression e) {}

	/**
	 * \brief getObjectID.
	 * \param self The <tt>%DQuaternionVectorAdapter</tt> instance.
	 */
	public int getObjectID(DQuaternionVectorAdapter self) {}

	/**
	 * \brief getSize.
	 * \param self The <tt>%DQuaternionVectorAdapter</tt> instance.
	 */
	public int getSize(DQuaternionVectorAdapter self) {}

	/**
	 * \brief getElement.
	 * \param self The <tt>%DQuaternionVectorAdapter</tt> instance.
	 */
	public float getElement(DQuaternionVectorAdapter self, int i) {}

	/**
	 * \brief isEmpty.
	 * \param self The <tt>%DQuaternionVectorAdapter</tt> instance.
	 */
	public bool isEmpty(DQuaternionVectorAdapter self) {}

	/**
	 * \brief swap.
	 * \param self The <tt>%DQuaternionVectorAdapter</tt> instance.
	 */
	public None swap(DQuaternionVectorAdapter self, DQuaternionVectorAdapter a) {}

	/**
	 * \brief getData.
	 * \param self The <tt>%DQuaternionVectorAdapter</tt> instance.
	 */
	public DQuaternionExpression getData(DQuaternionVectorAdapter self) {}

	/**
	 * \brief setElement.
	 * \param self The <tt>%DQuaternionVectorAdapter</tt> instance.
	 */
	public None setElement(DQuaternionVectorAdapter self, int i, float v) {}

	/**
	 * \brief assign.
	 * \param self The <tt>%DQuaternionVectorAdapter</tt> instance.
	 */
	public DQuaternionVectorAdapter assign(DQuaternionVectorAdapter self, ConstFVectorExpression e) {}

	/**
	 * \brief assign.
	 * \param self The <tt>%DQuaternionVectorAdapter</tt> instance.
	 */
	public DQuaternionVectorAdapter assign(DQuaternionVectorAdapter self, ConstDVectorExpression e) {}

	/**
	 * \brief assign.
	 * \param self The <tt>%DQuaternionVectorAdapter</tt> instance.
	 */
	public DQuaternionVectorAdapter assign(DQuaternionVectorAdapter self, ConstLVectorExpression e) {}

	/**
	 * \brief assign.
	 * \param self The <tt>%DQuaternionVectorAdapter</tt> instance.
	 */
	public DQuaternionVectorAdapter assign(DQuaternionVectorAdapter self, ConstULVectorExpression e) {}

	/**
	 * \brief assign.
	 * \param self The <tt>%DQuaternionVectorAdapter</tt> instance.
	 */
	public DQuaternionVectorAdapter assign(DQuaternionVectorAdapter self, DQuaternionVectorAdapter a) {}

	/**
	 * \brief __isub__.
	 * \param self The <tt>%DQuaternionVectorAdapter</tt> instance.
	 */
	public DQuaternionVectorAdapter __isub__(DQuaternionVectorAdapter self, DQuaternionVectorAdapter a) {}

	/**
	 * \brief __isub__.
	 * \param self The <tt>%DQuaternionVectorAdapter</tt> instance.
	 */
	public DQuaternionVectorAdapter __isub__(DQuaternionVectorAdapter self, ConstDVectorExpression e) {}

	/**
	 * \brief __str__.
	 * \param self The <tt>%DQuaternionVectorAdapter</tt> instance.
	 */
	public str __str__(DQuaternionVectorAdapter self) {}

	/**
	 * \brief __rmul__.
	 * \param self The <tt>%DQuaternionVectorAdapter</tt> instance.
	 */
	public ConstDVectorExpression __rmul__(object self, float t) {}

	/**
	 * \brief __pos__.
	 * \param self The <tt>%DQuaternionVectorAdapter</tt> instance.
	 */
	public DQuaternionVectorAdapter __pos__(DQuaternionVectorAdapter self) {}

	/**
	 * \brief __call__.
	 * \param self The <tt>%DQuaternionVectorAdapter</tt> instance.
	 */
	public float __call__(DQuaternionVectorAdapter self, int i) {}

	/**
	 * \brief __len__.
	 * \param self The <tt>%DQuaternionVectorAdapter</tt> instance.
	 */
	public int __len__(DQuaternionVectorAdapter self) {}

	/**
	 * \brief __neg__.
	 * \param self The <tt>%DQuaternionVectorAdapter</tt> instance.
	 */
	public ConstDVectorExpression __neg__(object self) {}

	/**
	 * \brief __ne__.
	 * \param self The <tt>%DQuaternionVectorAdapter</tt> instance.
	 */
	public bool __ne__(DQuaternionVectorAdapter self, DQuaternionVectorAdapter a) {}

	/**
	 * \brief __ne__.
	 * \param self The <tt>%DQuaternionVectorAdapter</tt> instance.
	 */
	public bool __ne__(DQuaternionVectorAdapter self, ConstDVectorExpression e) {}

	/**
	 * \brief __getitem__.
	 * \param self The <tt>%DQuaternionVectorAdapter</tt> instance.
	 */
	public float __getitem__(DQuaternionVectorAdapter self, int i) {}

	/**
	 * \brief __idiv__.
	 * \param self The <tt>%DQuaternionVectorAdapter</tt> instance.
	 */
	public DQuaternionVectorAdapter __idiv__(DQuaternionVectorAdapter self, float t) {}

	/**
	 * \brief __setitem__.
	 * \param self The <tt>%DQuaternionVectorAdapter</tt> instance.
	 */
	public None __setitem__(DQuaternionVectorAdapter self, int i, float v) {}

	/**
	 * \brief __add__.
	 * \param self The <tt>%DQuaternionVectorAdapter</tt> instance.
	 */
	public ConstDVectorExpression __add__(object self, ConstDVectorExpression e) {}

	/**
	 * \brief __eq__.
	 * \param self The <tt>%DQuaternionVectorAdapter</tt> instance.
	 */
	public bool __eq__(DQuaternionVectorAdapter self, DQuaternionVectorAdapter a) {}

	/**
	 * \brief __eq__.
	 * \param self The <tt>%DQuaternionVectorAdapter</tt> instance.
	 */
	public bool __eq__(DQuaternionVectorAdapter self, ConstDVectorExpression e) {}

	/**
	 * \brief __imul__.
	 * \param self The <tt>%DQuaternionVectorAdapter</tt> instance.
	 */
	public DQuaternionVectorAdapter __imul__(DQuaternionVectorAdapter self, float t) {}

	/**
	 * \brief __iadd__.
	 * \param self The <tt>%DQuaternionVectorAdapter</tt> instance.
	 */
	public DQuaternionVectorAdapter __iadd__(DQuaternionVectorAdapter self, DQuaternionVectorAdapter a) {}

	/**
	 * \brief __iadd__.
	 * \param self The <tt>%DQuaternionVectorAdapter</tt> instance.
	 */
	public DQuaternionVectorAdapter __iadd__(DQuaternionVectorAdapter self, ConstDVectorExpression e) {}

	/**
	 * \brief __div__.
	 * \param self The <tt>%DQuaternionVectorAdapter</tt> instance.
	 */
	public ConstDVectorExpression __div__(object self, float t) {}

	/**
	 * \brief __mul__.
	 * \param self The <tt>%DQuaternionVectorAdapter</tt> instance.
	 */
	public ConstDVectorExpression __mul__(object self, float t) {}

	/**
	 * \brief __sub__.
	 * \param self The <tt>%DQuaternionVectorAdapter</tt> instance.
	 */
	public ConstDVectorExpression __sub__(object self, ConstDVectorExpression e) {}

	/**
	 * \brief objectID.
	 */
	public None objectID;

	/**
	 * \brief size.
	 */
	public None size;

	/**
	 * \brief data.
	 */
	public None data;
}
