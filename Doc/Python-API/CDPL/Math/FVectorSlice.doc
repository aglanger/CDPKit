/* -*- mode: java; tab-width: 4 -*- */

package CDPL.Math;

/**
 * \brief FVectorSlice.
 */
public class FVectorSlice extends Boost.Python.instance {

	/**
	 * \brief __init__.
	 * \param self The <tt>%FVectorSlice</tt> instance.
	 */
	public None __init__(object self, FVectorSlice s) {}

	/**
	 * \brief __init__.
	 * \param self The <tt>%FVectorSlice</tt> instance.
	 */
	public None __init__(object self, FVectorExpression e, Slice s) {}

	/**
	 * \brief getObjectID.
	 * \param self The <tt>%FVectorSlice</tt> instance.
	 */
	public int getObjectID(FVectorSlice self) {}

	/**
	 * \brief getSize.
	 * \param self The <tt>%FVectorSlice</tt> instance.
	 */
	public int getSize(FVectorSlice self) {}

	/**
	 * \brief getElement.
	 * \param self The <tt>%FVectorSlice</tt> instance.
	 */
	public float getElement(FVectorSlice self, int i) {}

	/**
	 * \brief isEmpty.
	 * \param self The <tt>%FVectorSlice</tt> instance.
	 */
	public bool isEmpty(FVectorSlice self) {}

	/**
	 * \brief swap.
	 * \param self The <tt>%FVectorSlice</tt> instance.
	 */
	public None swap(FVectorSlice self, FVectorSlice s) {}

	/**
	 * \brief getStride.
	 * \param self The <tt>%FVectorSlice</tt> instance.
	 */
	public int getStride(FVectorSlice self) {}

	/**
	 * \brief getData.
	 * \param self The <tt>%FVectorSlice</tt> instance.
	 */
	public FVectorExpression getData(FVectorSlice self) {}

	/**
	 * \brief setElement.
	 * \param self The <tt>%FVectorSlice</tt> instance.
	 */
	public None setElement(FVectorSlice self, int i, float v) {}

	/**
	 * \brief getStart.
	 * \param self The <tt>%FVectorSlice</tt> instance.
	 */
	public int getStart(FVectorSlice self) {}

	/**
	 * \brief assign.
	 * \param self The <tt>%FVectorSlice</tt> instance.
	 */
	public FVectorSlice assign(FVectorSlice self, ConstFVectorExpression e) {}

	/**
	 * \brief assign.
	 * \param self The <tt>%FVectorSlice</tt> instance.
	 */
	public FVectorSlice assign(FVectorSlice self, ConstDVectorExpression e) {}

	/**
	 * \brief assign.
	 * \param self The <tt>%FVectorSlice</tt> instance.
	 */
	public FVectorSlice assign(FVectorSlice self, ConstLVectorExpression e) {}

	/**
	 * \brief assign.
	 * \param self The <tt>%FVectorSlice</tt> instance.
	 */
	public FVectorSlice assign(FVectorSlice self, ConstULVectorExpression e) {}

	/**
	 * \brief assign.
	 * \param self The <tt>%FVectorSlice</tt> instance.
	 */
	public FVectorSlice assign(FVectorSlice self, FVectorSlice s) {}

	/**
	 * \brief __isub__.
	 * \param self The <tt>%FVectorSlice</tt> instance.
	 */
	public FVectorSlice __isub__(FVectorSlice self, FVectorSlice s) {}

	/**
	 * \brief __isub__.
	 * \param self The <tt>%FVectorSlice</tt> instance.
	 */
	public FVectorSlice __isub__(FVectorSlice self, ConstFVectorExpression e) {}

	/**
	 * \brief __str__.
	 * \param self The <tt>%FVectorSlice</tt> instance.
	 */
	public str __str__(FVectorSlice self) {}

	/**
	 * \brief __rmul__.
	 * \param self The <tt>%FVectorSlice</tt> instance.
	 */
	public ConstFVectorExpression __rmul__(object self, float t) {}

	/**
	 * \brief __pos__.
	 * \param self The <tt>%FVectorSlice</tt> instance.
	 */
	public FVectorSlice __pos__(FVectorSlice self) {}

	/**
	 * \brief __call__.
	 * \param self The <tt>%FVectorSlice</tt> instance.
	 */
	public float __call__(FVectorSlice self, int i) {}

	/**
	 * \brief __len__.
	 * \param self The <tt>%FVectorSlice</tt> instance.
	 */
	public int __len__(FVectorSlice self) {}

	/**
	 * \brief __mul__.
	 * \param self The <tt>%FVectorSlice</tt> instance.
	 */
	public ConstFVectorExpression __mul__(object self, float t) {}

	/**
	 * \brief __ne__.
	 * \param self The <tt>%FVectorSlice</tt> instance.
	 */
	public bool __ne__(FVectorSlice self, FVectorSlice s) {}

	/**
	 * \brief __ne__.
	 * \param self The <tt>%FVectorSlice</tt> instance.
	 */
	public bool __ne__(FVectorSlice self, ConstFVectorExpression e) {}

	/**
	 * \brief __getitem__.
	 * \param self The <tt>%FVectorSlice</tt> instance.
	 */
	public float __getitem__(FVectorSlice self, int i) {}

	/**
	 * \brief __idiv__.
	 * \param self The <tt>%FVectorSlice</tt> instance.
	 */
	public FVectorSlice __idiv__(FVectorSlice self, float t) {}

	/**
	 * \brief __setitem__.
	 * \param self The <tt>%FVectorSlice</tt> instance.
	 */
	public None __setitem__(FVectorSlice self, int i, float v) {}

	/**
	 * \brief __add__.
	 * \param self The <tt>%FVectorSlice</tt> instance.
	 */
	public ConstFVectorExpression __add__(object self, ConstFVectorExpression e) {}

	/**
	 * \brief __eq__.
	 * \param self The <tt>%FVectorSlice</tt> instance.
	 */
	public bool __eq__(FVectorSlice self, FVectorSlice s) {}

	/**
	 * \brief __eq__.
	 * \param self The <tt>%FVectorSlice</tt> instance.
	 */
	public bool __eq__(FVectorSlice self, ConstFVectorExpression e) {}

	/**
	 * \brief __imul__.
	 * \param self The <tt>%FVectorSlice</tt> instance.
	 */
	public FVectorSlice __imul__(FVectorSlice self, float t) {}

	/**
	 * \brief __iadd__.
	 * \param self The <tt>%FVectorSlice</tt> instance.
	 */
	public FVectorSlice __iadd__(FVectorSlice self, FVectorSlice s) {}

	/**
	 * \brief __iadd__.
	 * \param self The <tt>%FVectorSlice</tt> instance.
	 */
	public FVectorSlice __iadd__(FVectorSlice self, ConstFVectorExpression e) {}

	/**
	 * \brief __div__.
	 * \param self The <tt>%FVectorSlice</tt> instance.
	 */
	public ConstFVectorExpression __div__(object self, float t) {}

	/**
	 * \brief __neg__.
	 * \param self The <tt>%FVectorSlice</tt> instance.
	 */
	public ConstFVectorExpression __neg__(object self) {}

	/**
	 * \brief __sub__.
	 * \param self The <tt>%FVectorSlice</tt> instance.
	 */
	public ConstFVectorExpression __sub__(object self, ConstFVectorExpression e) {}

	/**
	 * \brief objectID.
	 */
	public None objectID;

	/**
	 * \brief size.
	 */
	public None size;

	/**
	 * \brief start.
	 */
	public None start;

	/**
	 * \brief data.
	 */
	public None data;

	/**
	 * \brief stride.
	 */
	public None stride;
}
