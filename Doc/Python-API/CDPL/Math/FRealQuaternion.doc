/* -*- mode: java; tab-width: 4 -*- */

package CDPL.Math;

/**
 * \brief FRealQuaternion.
 */
public class FRealQuaternion extends Boost.Python.instance {

	/**
	 * \brief __init__.
	 * \param self The <tt>%FRealQuaternion</tt> instance.
	 */
	public None __init__(object self) {}

	/**
	 * \brief __init__.
	 * \param self The <tt>%FRealQuaternion</tt> instance.
	 */
	public None __init__(object self, FRealQuaternion q) {}

	/**
	 * \brief __init__.
	 * \param self The <tt>%FRealQuaternion</tt> instance.
	 */
	public None __init__(object self, float r) {}

	/**
	 * \brief set.
	 * \param self The <tt>%FRealQuaternion</tt> instance.
	 */
	public FRealQuaternion set(FRealQuaternion self, FRealQuaternion r = 0.0) {}

	/**
	 * \brief getObjectID.
	 * \param self The <tt>%FRealQuaternion</tt> instance.
	 */
	public int getObjectID(FRealQuaternion self) {}

	/**
	 * \brief getC4.
	 * \param self The <tt>%FRealQuaternion</tt> instance.
	 */
	public float getC4(FRealQuaternion self) {}

	/**
	 * \brief swap.
	 * \param self The <tt>%FRealQuaternion</tt> instance.
	 */
	public None swap(FRealQuaternion self, FRealQuaternion q) {}

	/**
	 * \brief getC1.
	 * \param self The <tt>%FRealQuaternion</tt> instance.
	 */
	public float getC1(FRealQuaternion self) {}

	/**
	 * \brief getC2.
	 * \param self The <tt>%FRealQuaternion</tt> instance.
	 */
	public float getC2(FRealQuaternion self) {}

	/**
	 * \brief getC3.
	 * \param self The <tt>%FRealQuaternion</tt> instance.
	 */
	public float getC3(FRealQuaternion self) {}

	/**
	 * \brief assign.
	 * \param self The <tt>%FRealQuaternion</tt> instance.
	 */
	public FRealQuaternion assign(FRealQuaternion self, FRealQuaternion q) {}

	/**
	 * \brief __ne__.
	 * \param self The <tt>%FRealQuaternion</tt> instance.
	 */
	public bool __ne__(FRealQuaternion self, FRealQuaternion q) {}

	/**
	 * \brief __ne__.
	 * \param self The <tt>%FRealQuaternion</tt> instance.
	 */
	public bool __ne__(FRealQuaternion self, ConstFQuaternionExpression q) {}

	/**
	 * \brief __str__.
	 * \param self The <tt>%FRealQuaternion</tt> instance.
	 */
	public str __str__(FRealQuaternion self) {}

	/**
	 * \brief __radd__.
	 * \param self The <tt>%FRealQuaternion</tt> instance.
	 */
	public ConstFQuaternionExpression __radd__(object self, float t) {}

	/**
	 * \brief __rsub__.
	 * \param self The <tt>%FRealQuaternion</tt> instance.
	 */
	public ConstFQuaternionExpression __rsub__(object self, float t) {}

	/**
	 * \brief __rdiv__.
	 * \param self The <tt>%FRealQuaternion</tt> instance.
	 */
	public ConstFQuaternionExpression __rdiv__(object self, float t) {}

	/**
	 * \brief __rmul__.
	 * \param self The <tt>%FRealQuaternion</tt> instance.
	 */
	public ConstFQuaternionExpression __rmul__(object self, float t) {}

	/**
	 * \brief __pos__.
	 * \param self The <tt>%FRealQuaternion</tt> instance.
	 */
	public FRealQuaternion __pos__(FRealQuaternion self) {}

	/**
	 * \brief __mul__.
	 * \param self The <tt>%FRealQuaternion</tt> instance.
	 */
	public ConstFQuaternionExpression __mul__(object self, float t) {}

	/**
	 * \brief __mul__.
	 * \param self The <tt>%FRealQuaternion</tt> instance.
	 */
	public ConstFQuaternionExpression __mul__(object self, ConstFQuaternionExpression e) {}

	/**
	 * \brief __isub__.
	 * \param self The <tt>%FRealQuaternion</tt> instance.
	 */
	public FRealQuaternion __isub__(FRealQuaternion self, FRealQuaternion t) {}

	/**
	 * \brief __isub__.
	 * \param self The <tt>%FRealQuaternion</tt> instance.
	 */
	public FRealQuaternion __isub__(FRealQuaternion self, object q) {}

	/**
	 * \brief __idiv__.
	 * \param self The <tt>%FRealQuaternion</tt> instance.
	 */
	public FRealQuaternion __idiv__(FRealQuaternion self, FRealQuaternion t) {}

	/**
	 * \brief __idiv__.
	 * \param self The <tt>%FRealQuaternion</tt> instance.
	 */
	public FRealQuaternion __idiv__(FRealQuaternion self, object q) {}

	/**
	 * \brief __add__.
	 * \param self The <tt>%FRealQuaternion</tt> instance.
	 */
	public ConstFQuaternionExpression __add__(object self, float t) {}

	/**
	 * \brief __add__.
	 * \param self The <tt>%FRealQuaternion</tt> instance.
	 */
	public ConstFQuaternionExpression __add__(object self, ConstFQuaternionExpression e) {}

	/**
	 * \brief __eq__.
	 * \param self The <tt>%FRealQuaternion</tt> instance.
	 */
	public bool __eq__(FRealQuaternion self, FRealQuaternion q) {}

	/**
	 * \brief __eq__.
	 * \param self The <tt>%FRealQuaternion</tt> instance.
	 */
	public bool __eq__(FRealQuaternion self, ConstFQuaternionExpression q) {}

	/**
	 * \brief __imul__.
	 * \param self The <tt>%FRealQuaternion</tt> instance.
	 */
	public FRealQuaternion __imul__(FRealQuaternion self, FRealQuaternion t) {}

	/**
	 * \brief __imul__.
	 * \param self The <tt>%FRealQuaternion</tt> instance.
	 */
	public FRealQuaternion __imul__(FRealQuaternion self, object q) {}

	/**
	 * \brief __iadd__.
	 * \param self The <tt>%FRealQuaternion</tt> instance.
	 */
	public FRealQuaternion __iadd__(FRealQuaternion self, FRealQuaternion t) {}

	/**
	 * \brief __iadd__.
	 * \param self The <tt>%FRealQuaternion</tt> instance.
	 */
	public FRealQuaternion __iadd__(FRealQuaternion self, object q) {}

	/**
	 * \brief __div__.
	 * \param self The <tt>%FRealQuaternion</tt> instance.
	 */
	public ConstFQuaternionExpression __div__(object self, float t) {}

	/**
	 * \brief __div__.
	 * \param self The <tt>%FRealQuaternion</tt> instance.
	 */
	public ConstFQuaternionExpression __div__(object self, ConstFQuaternionExpression e) {}

	/**
	 * \brief __neg__.
	 * \param self The <tt>%FRealQuaternion</tt> instance.
	 */
	public ConstFQuaternionExpression __neg__(object self) {}

	/**
	 * \brief __sub__.
	 * \param self The <tt>%FRealQuaternion</tt> instance.
	 */
	public ConstFQuaternionExpression __sub__(object self, float t) {}

	/**
	 * \brief __sub__.
	 * \param self The <tt>%FRealQuaternion</tt> instance.
	 */
	public ConstFQuaternionExpression __sub__(object self, ConstFQuaternionExpression e) {}

	/**
	 * \brief objectID.
	 */
	public None objectID;
}
