/* -*- mode: java; tab-width: 4 -*- */

package CDPL.Math;

/**
 * \brief ULMatrixRange.
 */
public class ULMatrixRange extends Boost.Python.instance {

	/**
	 * \brief __init__.
	 * \param self The <tt>%ULMatrixRange</tt> instance.
	 */
	public None __init__(object self, ULMatrixRange r) {}

	/**
	 * \brief __init__.
	 * \param self The <tt>%ULMatrixRange</tt> instance.
	 */
	public None __init__(object self, ULMatrixExpression e, Range r1, Range r2) {}

	/**
	 * \brief getObjectID.
	 * \param self The <tt>%ULMatrixRange</tt> instance.
	 */
	public int getObjectID(ULMatrixRange self) {}

	/**
	 * \brief getElement.
	 * \param self The <tt>%ULMatrixRange</tt> instance.
	 */
	public int getElement(ULMatrixRange self, int i, int j) {}

	/**
	 * \brief isEmpty.
	 * \param self The <tt>%ULMatrixRange</tt> instance.
	 */
	public bool isEmpty(ULMatrixRange self) {}

	/**
	 * \brief swap.
	 * \param self The <tt>%ULMatrixRange</tt> instance.
	 */
	public None swap(ULMatrixRange self, ULMatrixRange r) {}

	/**
	 * \brief getData.
	 * \param self The <tt>%ULMatrixRange</tt> instance.
	 */
	public ULMatrixExpression getData(ULMatrixRange self) {}

	/**
	 * \brief getSize1.
	 * \param self The <tt>%ULMatrixRange</tt> instance.
	 */
	public int getSize1(ULMatrixRange self) {}

	/**
	 * \brief getSize2.
	 * \param self The <tt>%ULMatrixRange</tt> instance.
	 */
	public int getSize2(ULMatrixRange self) {}

	/**
	 * \brief setElement.
	 * \param self The <tt>%ULMatrixRange</tt> instance.
	 */
	public None setElement(ULMatrixRange self, int i, int j, int v) {}

	/**
	 * \brief getStart1.
	 * \param self The <tt>%ULMatrixRange</tt> instance.
	 */
	public int getStart1(ULMatrixRange self) {}

	/**
	 * \brief getStart2.
	 * \param self The <tt>%ULMatrixRange</tt> instance.
	 */
	public int getStart2(ULMatrixRange self) {}

	/**
	 * \brief assign.
	 * \param self The <tt>%ULMatrixRange</tt> instance.
	 */
	public ULMatrixRange assign(ULMatrixRange self, ConstFMatrixExpression e) {}

	/**
	 * \brief assign.
	 * \param self The <tt>%ULMatrixRange</tt> instance.
	 */
	public ULMatrixRange assign(ULMatrixRange self, ConstDMatrixExpression e) {}

	/**
	 * \brief assign.
	 * \param self The <tt>%ULMatrixRange</tt> instance.
	 */
	public ULMatrixRange assign(ULMatrixRange self, ConstLMatrixExpression e) {}

	/**
	 * \brief assign.
	 * \param self The <tt>%ULMatrixRange</tt> instance.
	 */
	public ULMatrixRange assign(ULMatrixRange self, ConstULMatrixExpression e) {}

	/**
	 * \brief assign.
	 * \param self The <tt>%ULMatrixRange</tt> instance.
	 */
	public ULMatrixRange assign(ULMatrixRange self, ULMatrixRange r) {}

	/**
	 * \brief __isub__.
	 * \param self The <tt>%ULMatrixRange</tt> instance.
	 */
	public ULMatrixRange __isub__(ULMatrixRange self, ULMatrixRange r) {}

	/**
	 * \brief __isub__.
	 * \param self The <tt>%ULMatrixRange</tt> instance.
	 */
	public ULMatrixRange __isub__(ULMatrixRange self, ConstULMatrixExpression e) {}

	/**
	 * \brief __str__.
	 * \param self The <tt>%ULMatrixRange</tt> instance.
	 */
	public str __str__(ULMatrixRange self) {}

	/**
	 * \brief __rmul__.
	 * \param self The <tt>%ULMatrixRange</tt> instance.
	 */
	public ConstULMatrixExpression __rmul__(object self, int t) {}

	/**
	 * \brief __pos__.
	 * \param self The <tt>%ULMatrixRange</tt> instance.
	 */
	public ULMatrixRange __pos__(ULMatrixRange self) {}

	/**
	 * \brief __call__.
	 * \param self The <tt>%ULMatrixRange</tt> instance.
	 */
	public int __call__(ULMatrixRange self, int i, int j) {}

	/**
	 * \brief __len__.
	 * \param self The <tt>%ULMatrixRange</tt> instance.
	 */
	public int __len__(ULMatrixRange self) {}

	/**
	 * \brief __ne__.
	 * \param self The <tt>%ULMatrixRange</tt> instance.
	 */
	public bool __ne__(ULMatrixRange self, ULMatrixRange r) {}

	/**
	 * \brief __ne__.
	 * \param self The <tt>%ULMatrixRange</tt> instance.
	 */
	public bool __ne__(ULMatrixRange self, ConstULMatrixExpression e) {}

	/**
	 * \brief __getitem__.
	 * \param self The <tt>%ULMatrixRange</tt> instance.
	 */
	public int __getitem__(ULMatrixRange self, tuple ij) {}

	/**
	 * \brief __idiv__.
	 * \param self The <tt>%ULMatrixRange</tt> instance.
	 */
	public ULMatrixRange __idiv__(ULMatrixRange self, int t) {}

	/**
	 * \brief __setitem__.
	 * \param self The <tt>%ULMatrixRange</tt> instance.
	 */
	public None __setitem__(ULMatrixRange self, tuple ij, int v) {}

	/**
	 * \brief __add__.
	 * \param self The <tt>%ULMatrixRange</tt> instance.
	 */
	public ConstULMatrixExpression __add__(object self, ConstULMatrixExpression e) {}

	/**
	 * \brief __eq__.
	 * \param self The <tt>%ULMatrixRange</tt> instance.
	 */
	public bool __eq__(ULMatrixRange self, ULMatrixRange r) {}

	/**
	 * \brief __eq__.
	 * \param self The <tt>%ULMatrixRange</tt> instance.
	 */
	public bool __eq__(ULMatrixRange self, ConstULMatrixExpression e) {}

	/**
	 * \brief __imul__.
	 * \param self The <tt>%ULMatrixRange</tt> instance.
	 */
	public ULMatrixRange __imul__(ULMatrixRange self, int t) {}

	/**
	 * \brief __iadd__.
	 * \param self The <tt>%ULMatrixRange</tt> instance.
	 */
	public ULMatrixRange __iadd__(ULMatrixRange self, ULMatrixRange r) {}

	/**
	 * \brief __iadd__.
	 * \param self The <tt>%ULMatrixRange</tt> instance.
	 */
	public ULMatrixRange __iadd__(ULMatrixRange self, ConstULMatrixExpression e) {}

	/**
	 * \brief __div__.
	 * \param self The <tt>%ULMatrixRange</tt> instance.
	 */
	public ConstULMatrixExpression __div__(object self, int t) {}

	/**
	 * \brief __mul__.
	 * \param self The <tt>%ULMatrixRange</tt> instance.
	 */
	public ConstULMatrixExpression __mul__(object self, int t) {}

	/**
	 * \brief __neg__.
	 * \param self The <tt>%ULMatrixRange</tt> instance.
	 */
	public ConstULMatrixExpression __neg__(object self) {}

	/**
	 * \brief __sub__.
	 * \param self The <tt>%ULMatrixRange</tt> instance.
	 */
	public ConstULMatrixExpression __sub__(object self, ConstULMatrixExpression e) {}

	/**
	 * \brief objectID.
	 */
	public None objectID;

	/**
	 * \brief size1.
	 */
	public None size1;

	/**
	 * \brief start2.
	 */
	public None start2;

	/**
	 * \brief data.
	 */
	public None data;

	/**
	 * \brief start1.
	 */
	public None start1;

	/**
	 * \brief size2.
	 */
	public None size2;
}
