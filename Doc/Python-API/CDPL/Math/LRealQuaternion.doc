/* -*- mode: java; tab-width: 4 -*- */

package CDPL.Math;

/**
 * \brief LRealQuaternion.
 */
public class LRealQuaternion extends Boost.Python.instance {

	/**
	 * \brief __init__.
	 * \param self The <tt>%LRealQuaternion</tt> instance.
	 */
	public None __init__(object self) {}

	/**
	 * \brief __init__.
	 * \param self The <tt>%LRealQuaternion</tt> instance.
	 */
	public None __init__(object self, LRealQuaternion q) {}

	/**
	 * \brief __init__.
	 * \param self The <tt>%LRealQuaternion</tt> instance.
	 */
	public None __init__(object self, int r) {}

	/**
	 * \brief set.
	 * \param self The <tt>%LRealQuaternion</tt> instance.
	 */
	public LRealQuaternion set(LRealQuaternion self, LRealQuaternion r = 0) {}

	/**
	 * \brief getObjectID.
	 * \param self The <tt>%LRealQuaternion</tt> instance.
	 */
	public int getObjectID(LRealQuaternion self) {}

	/**
	 * \brief getC4.
	 * \param self The <tt>%LRealQuaternion</tt> instance.
	 */
	public int getC4(LRealQuaternion self) {}

	/**
	 * \brief swap.
	 * \param self The <tt>%LRealQuaternion</tt> instance.
	 */
	public None swap(LRealQuaternion self, LRealQuaternion q) {}

	/**
	 * \brief getC1.
	 * \param self The <tt>%LRealQuaternion</tt> instance.
	 */
	public int getC1(LRealQuaternion self) {}

	/**
	 * \brief getC2.
	 * \param self The <tt>%LRealQuaternion</tt> instance.
	 */
	public int getC2(LRealQuaternion self) {}

	/**
	 * \brief getC3.
	 * \param self The <tt>%LRealQuaternion</tt> instance.
	 */
	public int getC3(LRealQuaternion self) {}

	/**
	 * \brief assign.
	 * \param self The <tt>%LRealQuaternion</tt> instance.
	 */
	public LRealQuaternion assign(LRealQuaternion self, LRealQuaternion q) {}

	/**
	 * \brief __ne__.
	 * \param self The <tt>%LRealQuaternion</tt> instance.
	 */
	public bool __ne__(LRealQuaternion self, LRealQuaternion q) {}

	/**
	 * \brief __ne__.
	 * \param self The <tt>%LRealQuaternion</tt> instance.
	 */
	public bool __ne__(LRealQuaternion self, ConstLQuaternionExpression q) {}

	/**
	 * \brief __str__.
	 * \param self The <tt>%LRealQuaternion</tt> instance.
	 */
	public str __str__(LRealQuaternion self) {}

	/**
	 * \brief __radd__.
	 * \param self The <tt>%LRealQuaternion</tt> instance.
	 */
	public ConstLQuaternionExpression __radd__(object self, int t) {}

	/**
	 * \brief __rsub__.
	 * \param self The <tt>%LRealQuaternion</tt> instance.
	 */
	public ConstLQuaternionExpression __rsub__(object self, int t) {}

	/**
	 * \brief __rdiv__.
	 * \param self The <tt>%LRealQuaternion</tt> instance.
	 */
	public ConstLQuaternionExpression __rdiv__(object self, int t) {}

	/**
	 * \brief __rmul__.
	 * \param self The <tt>%LRealQuaternion</tt> instance.
	 */
	public ConstLQuaternionExpression __rmul__(object self, int t) {}

	/**
	 * \brief __pos__.
	 * \param self The <tt>%LRealQuaternion</tt> instance.
	 */
	public LRealQuaternion __pos__(LRealQuaternion self) {}

	/**
	 * \brief __mul__.
	 * \param self The <tt>%LRealQuaternion</tt> instance.
	 */
	public ConstLQuaternionExpression __mul__(object self, int t) {}

	/**
	 * \brief __mul__.
	 * \param self The <tt>%LRealQuaternion</tt> instance.
	 */
	public ConstLQuaternionExpression __mul__(object self, ConstLQuaternionExpression e) {}

	/**
	 * \brief __isub__.
	 * \param self The <tt>%LRealQuaternion</tt> instance.
	 */
	public LRealQuaternion __isub__(LRealQuaternion self, LRealQuaternion t) {}

	/**
	 * \brief __isub__.
	 * \param self The <tt>%LRealQuaternion</tt> instance.
	 */
	public LRealQuaternion __isub__(LRealQuaternion self, object q) {}

	/**
	 * \brief __idiv__.
	 * \param self The <tt>%LRealQuaternion</tt> instance.
	 */
	public LRealQuaternion __idiv__(LRealQuaternion self, LRealQuaternion t) {}

	/**
	 * \brief __idiv__.
	 * \param self The <tt>%LRealQuaternion</tt> instance.
	 */
	public LRealQuaternion __idiv__(LRealQuaternion self, object q) {}

	/**
	 * \brief __add__.
	 * \param self The <tt>%LRealQuaternion</tt> instance.
	 */
	public ConstLQuaternionExpression __add__(object self, int t) {}

	/**
	 * \brief __add__.
	 * \param self The <tt>%LRealQuaternion</tt> instance.
	 */
	public ConstLQuaternionExpression __add__(object self, ConstLQuaternionExpression e) {}

	/**
	 * \brief __eq__.
	 * \param self The <tt>%LRealQuaternion</tt> instance.
	 */
	public bool __eq__(LRealQuaternion self, LRealQuaternion q) {}

	/**
	 * \brief __eq__.
	 * \param self The <tt>%LRealQuaternion</tt> instance.
	 */
	public bool __eq__(LRealQuaternion self, ConstLQuaternionExpression q) {}

	/**
	 * \brief __imul__.
	 * \param self The <tt>%LRealQuaternion</tt> instance.
	 */
	public LRealQuaternion __imul__(LRealQuaternion self, LRealQuaternion t) {}

	/**
	 * \brief __imul__.
	 * \param self The <tt>%LRealQuaternion</tt> instance.
	 */
	public LRealQuaternion __imul__(LRealQuaternion self, object q) {}

	/**
	 * \brief __iadd__.
	 * \param self The <tt>%LRealQuaternion</tt> instance.
	 */
	public LRealQuaternion __iadd__(LRealQuaternion self, LRealQuaternion t) {}

	/**
	 * \brief __iadd__.
	 * \param self The <tt>%LRealQuaternion</tt> instance.
	 */
	public LRealQuaternion __iadd__(LRealQuaternion self, object q) {}

	/**
	 * \brief __div__.
	 * \param self The <tt>%LRealQuaternion</tt> instance.
	 */
	public ConstLQuaternionExpression __div__(object self, int t) {}

	/**
	 * \brief __div__.
	 * \param self The <tt>%LRealQuaternion</tt> instance.
	 */
	public ConstLQuaternionExpression __div__(object self, ConstLQuaternionExpression e) {}

	/**
	 * \brief __neg__.
	 * \param self The <tt>%LRealQuaternion</tt> instance.
	 */
	public ConstLQuaternionExpression __neg__(object self) {}

	/**
	 * \brief __sub__.
	 * \param self The <tt>%LRealQuaternion</tt> instance.
	 */
	public ConstLQuaternionExpression __sub__(object self, int t) {}

	/**
	 * \brief __sub__.
	 * \param self The <tt>%LRealQuaternion</tt> instance.
	 */
	public ConstLQuaternionExpression __sub__(object self, ConstLQuaternionExpression e) {}

	/**
	 * \brief objectID.
	 */
	public None objectID;
}
