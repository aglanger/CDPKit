/* -*- mode: java; tab-width: 4 -*- */

package CDPL.Math;

/**
 * \brief DRealQuaternion.
 */
public class DRealQuaternion extends Boost.Python.instance {

	/**
	 * \brief __init__.
	 * \param self The <tt>%DRealQuaternion</tt> instance.
	 */
	public None __init__(object self) {}

	/**
	 * \brief __init__.
	 * \param self The <tt>%DRealQuaternion</tt> instance.
	 */
	public None __init__(object self, DRealQuaternion q) {}

	/**
	 * \brief __init__.
	 * \param self The <tt>%DRealQuaternion</tt> instance.
	 */
	public None __init__(object self, float r) {}

	/**
	 * \brief set.
	 * \param self The <tt>%DRealQuaternion</tt> instance.
	 */
	public DRealQuaternion set(DRealQuaternion self, DRealQuaternion r = 0.0) {}

	/**
	 * \brief getObjectID.
	 * \param self The <tt>%DRealQuaternion</tt> instance.
	 */
	public int getObjectID(DRealQuaternion self) {}

	/**
	 * \brief getC4.
	 * \param self The <tt>%DRealQuaternion</tt> instance.
	 */
	public float getC4(DRealQuaternion self) {}

	/**
	 * \brief swap.
	 * \param self The <tt>%DRealQuaternion</tt> instance.
	 */
	public None swap(DRealQuaternion self, DRealQuaternion q) {}

	/**
	 * \brief getC1.
	 * \param self The <tt>%DRealQuaternion</tt> instance.
	 */
	public float getC1(DRealQuaternion self) {}

	/**
	 * \brief getC2.
	 * \param self The <tt>%DRealQuaternion</tt> instance.
	 */
	public float getC2(DRealQuaternion self) {}

	/**
	 * \brief getC3.
	 * \param self The <tt>%DRealQuaternion</tt> instance.
	 */
	public float getC3(DRealQuaternion self) {}

	/**
	 * \brief assign.
	 * \param self The <tt>%DRealQuaternion</tt> instance.
	 */
	public DRealQuaternion assign(DRealQuaternion self, DRealQuaternion q) {}

	/**
	 * \brief __ne__.
	 * \param self The <tt>%DRealQuaternion</tt> instance.
	 */
	public bool __ne__(DRealQuaternion self, DRealQuaternion q) {}

	/**
	 * \brief __ne__.
	 * \param self The <tt>%DRealQuaternion</tt> instance.
	 */
	public bool __ne__(DRealQuaternion self, ConstDQuaternionExpression q) {}

	/**
	 * \brief __str__.
	 * \param self The <tt>%DRealQuaternion</tt> instance.
	 */
	public str __str__(DRealQuaternion self) {}

	/**
	 * \brief __radd__.
	 * \param self The <tt>%DRealQuaternion</tt> instance.
	 */
	public ConstDQuaternionExpression __radd__(object self, float t) {}

	/**
	 * \brief __rsub__.
	 * \param self The <tt>%DRealQuaternion</tt> instance.
	 */
	public ConstDQuaternionExpression __rsub__(object self, float t) {}

	/**
	 * \brief __rdiv__.
	 * \param self The <tt>%DRealQuaternion</tt> instance.
	 */
	public ConstDQuaternionExpression __rdiv__(object self, float t) {}

	/**
	 * \brief __rmul__.
	 * \param self The <tt>%DRealQuaternion</tt> instance.
	 */
	public ConstDQuaternionExpression __rmul__(object self, float t) {}

	/**
	 * \brief __pos__.
	 * \param self The <tt>%DRealQuaternion</tt> instance.
	 */
	public DRealQuaternion __pos__(DRealQuaternion self) {}

	/**
	 * \brief __mul__.
	 * \param self The <tt>%DRealQuaternion</tt> instance.
	 */
	public ConstDQuaternionExpression __mul__(object self, float t) {}

	/**
	 * \brief __mul__.
	 * \param self The <tt>%DRealQuaternion</tt> instance.
	 */
	public ConstDQuaternionExpression __mul__(object self, ConstDQuaternionExpression e) {}

	/**
	 * \brief __isub__.
	 * \param self The <tt>%DRealQuaternion</tt> instance.
	 */
	public DRealQuaternion __isub__(DRealQuaternion self, DRealQuaternion t) {}

	/**
	 * \brief __isub__.
	 * \param self The <tt>%DRealQuaternion</tt> instance.
	 */
	public DRealQuaternion __isub__(DRealQuaternion self, object q) {}

	/**
	 * \brief __idiv__.
	 * \param self The <tt>%DRealQuaternion</tt> instance.
	 */
	public DRealQuaternion __idiv__(DRealQuaternion self, DRealQuaternion t) {}

	/**
	 * \brief __idiv__.
	 * \param self The <tt>%DRealQuaternion</tt> instance.
	 */
	public DRealQuaternion __idiv__(DRealQuaternion self, object q) {}

	/**
	 * \brief __add__.
	 * \param self The <tt>%DRealQuaternion</tt> instance.
	 */
	public ConstDQuaternionExpression __add__(object self, float t) {}

	/**
	 * \brief __add__.
	 * \param self The <tt>%DRealQuaternion</tt> instance.
	 */
	public ConstDQuaternionExpression __add__(object self, ConstDQuaternionExpression e) {}

	/**
	 * \brief __eq__.
	 * \param self The <tt>%DRealQuaternion</tt> instance.
	 */
	public bool __eq__(DRealQuaternion self, DRealQuaternion q) {}

	/**
	 * \brief __eq__.
	 * \param self The <tt>%DRealQuaternion</tt> instance.
	 */
	public bool __eq__(DRealQuaternion self, ConstDQuaternionExpression q) {}

	/**
	 * \brief __imul__.
	 * \param self The <tt>%DRealQuaternion</tt> instance.
	 */
	public DRealQuaternion __imul__(DRealQuaternion self, DRealQuaternion t) {}

	/**
	 * \brief __imul__.
	 * \param self The <tt>%DRealQuaternion</tt> instance.
	 */
	public DRealQuaternion __imul__(DRealQuaternion self, object q) {}

	/**
	 * \brief __iadd__.
	 * \param self The <tt>%DRealQuaternion</tt> instance.
	 */
	public DRealQuaternion __iadd__(DRealQuaternion self, DRealQuaternion t) {}

	/**
	 * \brief __iadd__.
	 * \param self The <tt>%DRealQuaternion</tt> instance.
	 */
	public DRealQuaternion __iadd__(DRealQuaternion self, object q) {}

	/**
	 * \brief __div__.
	 * \param self The <tt>%DRealQuaternion</tt> instance.
	 */
	public ConstDQuaternionExpression __div__(object self, float t) {}

	/**
	 * \brief __div__.
	 * \param self The <tt>%DRealQuaternion</tt> instance.
	 */
	public ConstDQuaternionExpression __div__(object self, ConstDQuaternionExpression e) {}

	/**
	 * \brief __neg__.
	 * \param self The <tt>%DRealQuaternion</tt> instance.
	 */
	public ConstDQuaternionExpression __neg__(object self) {}

	/**
	 * \brief __sub__.
	 * \param self The <tt>%DRealQuaternion</tt> instance.
	 */
	public ConstDQuaternionExpression __sub__(object self, float t) {}

	/**
	 * \brief __sub__.
	 * \param self The <tt>%DRealQuaternion</tt> instance.
	 */
	public ConstDQuaternionExpression __sub__(object self, ConstDQuaternionExpression e) {}

	/**
	 * \brief objectID.
	 */
	public None objectID;
}
