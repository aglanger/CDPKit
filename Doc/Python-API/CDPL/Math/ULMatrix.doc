/* -*- mode: java; tab-width: 4 -*- */

package CDPL.Math;

/**
 * \brief ULMatrix.
 */
public class ULMatrix extends Boost.Python.instance {

	/**
	 * \brief __init__.
	 * \param self The <tt>%ULMatrix</tt> instance.
	 */
	public None __init__(object self) {}

	/**
	 * \brief __init__.
	 * \param self The <tt>%ULMatrix</tt> instance.
	 */
	public None __init__(object self, ULMatrix m) {}

	/**
	 * \brief __init__.
	 * \param self The <tt>%ULMatrix</tt> instance.
	 */
	public None __init__(object self, int m, int n) {}

	/**
	 * \brief __init__.
	 * \param self The <tt>%ULMatrix</tt> instance.
	 */
	public None __init__(object self, int m, int n, int v) {}

	/**
	 * \brief __init__.
	 * \param self The <tt>%ULMatrix</tt> instance.
	 */
	public object __init__(object arg1, ConstFMatrixExpression e) {}

	/**
	 * \brief __init__.
	 * \param self The <tt>%ULMatrix</tt> instance.
	 */
	public object __init__(object arg1, ConstDMatrixExpression e) {}

	/**
	 * \brief __init__.
	 * \param self The <tt>%ULMatrix</tt> instance.
	 */
	public object __init__(object arg1, ConstLMatrixExpression e) {}

	/**
	 * \brief __init__.
	 * \param self The <tt>%ULMatrix</tt> instance.
	 */
	public object __init__(object arg1, ConstULMatrixExpression e) {}

	/**
	 * \brief getObjectID.
	 * \param self The <tt>%ULMatrix</tt> instance.
	 */
	public int getObjectID(ULMatrix self) {}

	/**
	 * \brief getElement.
	 * \param self The <tt>%ULMatrix</tt> instance.
	 */
	public int getElement(ULMatrix self, int i, int j) {}

	/**
	 * \brief isEmpty.
	 * \param self The <tt>%ULMatrix</tt> instance.
	 */
	public bool isEmpty(ULMatrix self) {}

	/**
	 * \brief swap.
	 * \param self The <tt>%ULMatrix</tt> instance.
	 */
	public None swap(ULMatrix self, ULMatrix m) {}

	/**
	 * \brief getSize1.
	 * \param self The <tt>%ULMatrix</tt> instance.
	 */
	public int getSize1(ULMatrix self) {}

	/**
	 * \brief getSize2.
	 * \param self The <tt>%ULMatrix</tt> instance.
	 */
	public int getSize2(ULMatrix self) {}

	/**
	 * \brief setElement.
	 * \param self The <tt>%ULMatrix</tt> instance.
	 */
	public None setElement(ULMatrix self, int i, int j, int v) {}

	/**
	 * \brief resize.
	 * \param self The <tt>%ULMatrix</tt> instance.
	 */
	public None resize(ULMatrix self, int m, int n, bool preserve = True, int v = 0) {}

	/**
	 * \brief clear.
	 * \param self The <tt>%ULMatrix</tt> instance.
	 */
	public None clear(ULMatrix self, int v = 0) {}

	/**
	 * \brief assign.
	 * \param self The <tt>%ULMatrix</tt> instance.
	 */
	public ULMatrix assign(ULMatrix self, ConstFMatrixExpression e) {}

	/**
	 * \brief assign.
	 * \param self The <tt>%ULMatrix</tt> instance.
	 */
	public ULMatrix assign(ULMatrix self, ConstDMatrixExpression e) {}

	/**
	 * \brief assign.
	 * \param self The <tt>%ULMatrix</tt> instance.
	 */
	public ULMatrix assign(ULMatrix self, ConstLMatrixExpression e) {}

	/**
	 * \brief assign.
	 * \param self The <tt>%ULMatrix</tt> instance.
	 */
	public ULMatrix assign(ULMatrix self, ConstULMatrixExpression e) {}

	/**
	 * \brief assign.
	 * \param self The <tt>%ULMatrix</tt> instance.
	 */
	public ULMatrix assign(ULMatrix self, ULMatrix m) {}

	/**
	 * \brief __isub__.
	 * \param self The <tt>%ULMatrix</tt> instance.
	 */
	public ULMatrix __isub__(ULMatrix self, ULMatrix m) {}

	/**
	 * \brief __isub__.
	 * \param self The <tt>%ULMatrix</tt> instance.
	 */
	public ULMatrix __isub__(ULMatrix self, ConstULMatrixExpression e) {}

	/**
	 * \brief __str__.
	 * \param self The <tt>%ULMatrix</tt> instance.
	 */
	public str __str__(ULMatrix self) {}

	/**
	 * \brief __rmul__.
	 * \param self The <tt>%ULMatrix</tt> instance.
	 */
	public ConstULMatrixExpression __rmul__(object self, int t) {}

	/**
	 * \brief __pos__.
	 * \param self The <tt>%ULMatrix</tt> instance.
	 */
	public ULMatrix __pos__(ULMatrix self) {}

	/**
	 * \brief __call__.
	 * \param self The <tt>%ULMatrix</tt> instance.
	 */
	public int __call__(ULMatrix self, int i, int j) {}

	/**
	 * \brief __len__.
	 * \param self The <tt>%ULMatrix</tt> instance.
	 */
	public int __len__(ULMatrix self) {}

	/**
	 * \brief __ne__.
	 * \param self The <tt>%ULMatrix</tt> instance.
	 */
	public bool __ne__(ULMatrix self, ULMatrix m) {}

	/**
	 * \brief __ne__.
	 * \param self The <tt>%ULMatrix</tt> instance.
	 */
	public bool __ne__(ULMatrix self, ConstULMatrixExpression e) {}

	/**
	 * \brief __getitem__.
	 * \param self The <tt>%ULMatrix</tt> instance.
	 */
	public int __getitem__(ULMatrix self, tuple ij) {}

	/**
	 * \brief __idiv__.
	 * \param self The <tt>%ULMatrix</tt> instance.
	 */
	public ULMatrix __idiv__(ULMatrix self, int t) {}

	/**
	 * \brief __setitem__.
	 * \param self The <tt>%ULMatrix</tt> instance.
	 */
	public None __setitem__(ULMatrix self, tuple ij, int v) {}

	/**
	 * \brief __add__.
	 * \param self The <tt>%ULMatrix</tt> instance.
	 */
	public ConstULMatrixExpression __add__(object self, ConstULMatrixExpression e) {}

	/**
	 * \brief __eq__.
	 * \param self The <tt>%ULMatrix</tt> instance.
	 */
	public bool __eq__(ULMatrix self, ULMatrix m) {}

	/**
	 * \brief __eq__.
	 * \param self The <tt>%ULMatrix</tt> instance.
	 */
	public bool __eq__(ULMatrix self, ConstULMatrixExpression e) {}

	/**
	 * \brief __imul__.
	 * \param self The <tt>%ULMatrix</tt> instance.
	 */
	public ULMatrix __imul__(ULMatrix self, int t) {}

	/**
	 * \brief __iadd__.
	 * \param self The <tt>%ULMatrix</tt> instance.
	 */
	public ULMatrix __iadd__(ULMatrix self, ULMatrix m) {}

	/**
	 * \brief __iadd__.
	 * \param self The <tt>%ULMatrix</tt> instance.
	 */
	public ULMatrix __iadd__(ULMatrix self, ConstULMatrixExpression e) {}

	/**
	 * \brief __div__.
	 * \param self The <tt>%ULMatrix</tt> instance.
	 */
	public ConstULMatrixExpression __div__(object self, int t) {}

	/**
	 * \brief __mul__.
	 * \param self The <tt>%ULMatrix</tt> instance.
	 */
	public ConstULMatrixExpression __mul__(object self, int t) {}

	/**
	 * \brief __neg__.
	 * \param self The <tt>%ULMatrix</tt> instance.
	 */
	public ConstULMatrixExpression __neg__(object self) {}

	/**
	 * \brief __sub__.
	 * \param self The <tt>%ULMatrix</tt> instance.
	 */
	public ConstULMatrixExpression __sub__(object self, ConstULMatrixExpression e) {}

	/**
	 * \brief objectID.
	 */
	public None objectID;

	/**
	 * \brief size1.
	 */
	public None size1;

	/**
	 * \brief size2.
	 */
	public None size2;
}
