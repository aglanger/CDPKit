/* -*- mode: java; tab-width: 4 -*- */

package CDPL.Math;

/**
 * \brief FRotationMatrix.
 */
public class FRotationMatrix extends Boost.Python.instance {

	/**
	 * \brief __init__.
	 * \param self The <tt>%FRotationMatrix</tt> instance.
	 */
	public None __init__(object self, FRotationMatrix m) {}

	/**
	 * \brief __init__.
	 * \param self The <tt>%FRotationMatrix</tt> instance.
	 */
	public None __init__(object self, int n, float w, float ux, float uy, float uz) {}

	/**
	 * \brief set.
	 * \param self The <tt>%FRotationMatrix</tt> instance.
	 */
	public None set(FRotationMatrix self, float w, float ux, float uy, float uz) {}

	/**
	 * \brief getObjectID.
	 * \param self The <tt>%FRotationMatrix</tt> instance.
	 */
	public int getObjectID(FRotationMatrix self) {}

	/**
	 * \brief getElement.
	 * \param self The <tt>%FRotationMatrix</tt> instance.
	 */
	public float getElement(FRotationMatrix self, int i, int j) {}

	/**
	 * \brief isEmpty.
	 * \param self The <tt>%FRotationMatrix</tt> instance.
	 */
	public bool isEmpty(FRotationMatrix self) {}

	/**
	 * \brief swap.
	 * \param self The <tt>%FRotationMatrix</tt> instance.
	 */
	public None swap(FRotationMatrix self, FRotationMatrix m) {}

	/**
	 * \brief getSize1.
	 * \param self The <tt>%FRotationMatrix</tt> instance.
	 */
	public int getSize1(FRotationMatrix self) {}

	/**
	 * \brief getSize2.
	 * \param self The <tt>%FRotationMatrix</tt> instance.
	 */
	public int getSize2(FRotationMatrix self) {}

	/**
	 * \brief resize.
	 * \param self The <tt>%FRotationMatrix</tt> instance.
	 */
	public None resize(FRotationMatrix arg1, int n) {}

	/**
	 * \brief assign.
	 * \param self The <tt>%FRotationMatrix</tt> instance.
	 */
	public FRotationMatrix assign(FRotationMatrix self, FRotationMatrix m) {}

	/**
	 * \brief __str__.
	 * \param self The <tt>%FRotationMatrix</tt> instance.
	 */
	public str __str__(FRotationMatrix self) {}

	/**
	 * \brief __rmul__.
	 * \param self The <tt>%FRotationMatrix</tt> instance.
	 */
	public ConstFMatrixExpression __rmul__(object self, float t) {}

	/**
	 * \brief __pos__.
	 * \param self The <tt>%FRotationMatrix</tt> instance.
	 */
	public FRotationMatrix __pos__(FRotationMatrix self) {}

	/**
	 * \brief __call__.
	 * \param self The <tt>%FRotationMatrix</tt> instance.
	 */
	public float __call__(FRotationMatrix self, int i, int j) {}

	/**
	 * \brief __len__.
	 * \param self The <tt>%FRotationMatrix</tt> instance.
	 */
	public int __len__(FRotationMatrix self) {}

	/**
	 * \brief __ne__.
	 * \param self The <tt>%FRotationMatrix</tt> instance.
	 */
	public bool __ne__(FRotationMatrix self, FRotationMatrix m) {}

	/**
	 * \brief __ne__.
	 * \param self The <tt>%FRotationMatrix</tt> instance.
	 */
	public bool __ne__(FRotationMatrix self, ConstFMatrixExpression e) {}

	/**
	 * \brief __getitem__.
	 * \param self The <tt>%FRotationMatrix</tt> instance.
	 */
	public float __getitem__(FRotationMatrix self, tuple ij) {}

	/**
	 * \brief __add__.
	 * \param self The <tt>%FRotationMatrix</tt> instance.
	 */
	public ConstFMatrixExpression __add__(object self, ConstFMatrixExpression e) {}

	/**
	 * \brief __eq__.
	 * \param self The <tt>%FRotationMatrix</tt> instance.
	 */
	public bool __eq__(FRotationMatrix self, FRotationMatrix m) {}

	/**
	 * \brief __eq__.
	 * \param self The <tt>%FRotationMatrix</tt> instance.
	 */
	public bool __eq__(FRotationMatrix self, ConstFMatrixExpression e) {}

	/**
	 * \brief __div__.
	 * \param self The <tt>%FRotationMatrix</tt> instance.
	 */
	public ConstFMatrixExpression __div__(object self, float t) {}

	/**
	 * \brief __mul__.
	 * \param self The <tt>%FRotationMatrix</tt> instance.
	 */
	public ConstFMatrixExpression __mul__(object self, float t) {}

	/**
	 * \brief __neg__.
	 * \param self The <tt>%FRotationMatrix</tt> instance.
	 */
	public ConstFMatrixExpression __neg__(object self) {}

	/**
	 * \brief __sub__.
	 * \param self The <tt>%FRotationMatrix</tt> instance.
	 */
	public ConstFMatrixExpression __sub__(object self, ConstFMatrixExpression e) {}

	/**
	 * \brief objectID.
	 */
	public None objectID;

	/**
	 * \brief size1.
	 */
	public None size1;

	/**
	 * \brief size2.
	 */
	public None size2;
}
