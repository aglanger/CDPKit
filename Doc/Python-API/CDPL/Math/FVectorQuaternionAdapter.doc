/* -*- mode: java; tab-width: 4 -*- */

package CDPL.Math;

/**
 * \brief FVectorQuaternionAdapter.
 */
public class FVectorQuaternionAdapter extends Boost.Python.instance {

	/**
	 * \brief __init__.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public None __init__(object self, FVectorQuaternionAdapter a) {}

	/**
	 * \brief __init__.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public None __init__(object self, FVectorExpression e) {}

	/**
	 * \brief set.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public None set(FVectorQuaternionAdapter self, float c1 = 0.0, float c2 = 0.0, float c3 = 0.0, float c4 = 0.0) {}

	/**
	 * \brief getObjectID.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public int getObjectID(FVectorQuaternionAdapter self) {}

	/**
	 * \brief getC4.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public float getC4(FVectorQuaternionAdapter self) {}

	/**
	 * \brief swap.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public None swap(FVectorQuaternionAdapter self, FVectorQuaternionAdapter a) {}

	/**
	 * \brief setC4.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public None setC4(FVectorQuaternionAdapter self, float v) {}

	/**
	 * \brief getData.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public FVectorExpression getData(FVectorQuaternionAdapter self) {}

	/**
	 * \brief setC2.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public None setC2(FVectorQuaternionAdapter self, float v) {}

	/**
	 * \brief getC1.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public float getC1(FVectorQuaternionAdapter self) {}

	/**
	 * \brief getC2.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public float getC2(FVectorQuaternionAdapter self) {}

	/**
	 * \brief getC3.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public float getC3(FVectorQuaternionAdapter self) {}

	/**
	 * \brief setC1.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public None setC1(FVectorQuaternionAdapter self, float v) {}

	/**
	 * \brief setC3.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public None setC3(FVectorQuaternionAdapter self, float v) {}

	/**
	 * \brief assign.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public FVectorQuaternionAdapter assign(FVectorQuaternionAdapter self, ConstFQuaternionExpression e) {}

	/**
	 * \brief assign.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public FVectorQuaternionAdapter assign(FVectorQuaternionAdapter self, ConstDQuaternionExpression e) {}

	/**
	 * \brief assign.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public FVectorQuaternionAdapter assign(FVectorQuaternionAdapter self, ConstLQuaternionExpression e) {}

	/**
	 * \brief assign.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public FVectorQuaternionAdapter assign(FVectorQuaternionAdapter self, ConstULQuaternionExpression e) {}

	/**
	 * \brief assign.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public FVectorQuaternionAdapter assign(FVectorQuaternionAdapter self, FVectorQuaternionAdapter a) {}

	/**
	 * \brief __isub__.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public FVectorQuaternionAdapter __isub__(FVectorQuaternionAdapter self, float t) {}

	/**
	 * \brief __isub__.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public FVectorQuaternionAdapter __isub__(FVectorQuaternionAdapter self, FVectorQuaternionAdapter a) {}

	/**
	 * \brief __isub__.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public FVectorQuaternionAdapter __isub__(FVectorQuaternionAdapter self, ConstFQuaternionExpression q) {}

	/**
	 * \brief __str__.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public str __str__(FVectorQuaternionAdapter self) {}

	/**
	 * \brief __radd__.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public ConstFQuaternionExpression __radd__(object self, float t) {}

	/**
	 * \brief __rsub__.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public ConstFQuaternionExpression __rsub__(object self, float t) {}

	/**
	 * \brief __rdiv__.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public ConstFQuaternionExpression __rdiv__(object self, float t) {}

	/**
	 * \brief __rmul__.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public ConstFQuaternionExpression __rmul__(object self, float t) {}

	/**
	 * \brief __pos__.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public FVectorQuaternionAdapter __pos__(FVectorQuaternionAdapter self) {}

	/**
	 * \brief __mul__.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public ConstFQuaternionExpression __mul__(object self, float t) {}

	/**
	 * \brief __mul__.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public ConstFQuaternionExpression __mul__(object self, ConstFQuaternionExpression e) {}

	/**
	 * \brief __ne__.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public bool __ne__(FVectorQuaternionAdapter self, FVectorQuaternionAdapter a) {}

	/**
	 * \brief __ne__.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public bool __ne__(FVectorQuaternionAdapter self, ConstFQuaternionExpression q) {}

	/**
	 * \brief __idiv__.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public FVectorQuaternionAdapter __idiv__(FVectorQuaternionAdapter self, float t) {}

	/**
	 * \brief __idiv__.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public FVectorQuaternionAdapter __idiv__(FVectorQuaternionAdapter self, FVectorQuaternionAdapter a) {}

	/**
	 * \brief __idiv__.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public FVectorQuaternionAdapter __idiv__(FVectorQuaternionAdapter self, ConstFQuaternionExpression q) {}

	/**
	 * \brief __add__.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public ConstFQuaternionExpression __add__(object self, float t) {}

	/**
	 * \brief __add__.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public ConstFQuaternionExpression __add__(object self, ConstFQuaternionExpression e) {}

	/**
	 * \brief __eq__.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public bool __eq__(FVectorQuaternionAdapter self, FVectorQuaternionAdapter a) {}

	/**
	 * \brief __eq__.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public bool __eq__(FVectorQuaternionAdapter self, ConstFQuaternionExpression q) {}

	/**
	 * \brief __imul__.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public FVectorQuaternionAdapter __imul__(FVectorQuaternionAdapter self, float t) {}

	/**
	 * \brief __imul__.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public FVectorQuaternionAdapter __imul__(FVectorQuaternionAdapter self, FVectorQuaternionAdapter a) {}

	/**
	 * \brief __imul__.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public FVectorQuaternionAdapter __imul__(FVectorQuaternionAdapter self, ConstFQuaternionExpression q) {}

	/**
	 * \brief __iadd__.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public FVectorQuaternionAdapter __iadd__(FVectorQuaternionAdapter self, float t) {}

	/**
	 * \brief __iadd__.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public FVectorQuaternionAdapter __iadd__(FVectorQuaternionAdapter self, FVectorQuaternionAdapter a) {}

	/**
	 * \brief __iadd__.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public FVectorQuaternionAdapter __iadd__(FVectorQuaternionAdapter self, ConstFQuaternionExpression q) {}

	/**
	 * \brief __div__.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public ConstFQuaternionExpression __div__(object self, float t) {}

	/**
	 * \brief __div__.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public ConstFQuaternionExpression __div__(object self, ConstFQuaternionExpression e) {}

	/**
	 * \brief __neg__.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public ConstFQuaternionExpression __neg__(object self) {}

	/**
	 * \brief __sub__.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public ConstFQuaternionExpression __sub__(object self, float t) {}

	/**
	 * \brief __sub__.
	 * \param self The <tt>%FVectorQuaternionAdapter</tt> instance.
	 */
	public ConstFQuaternionExpression __sub__(object self, ConstFQuaternionExpression e) {}

	/**
	 * \brief objectID.
	 */
	public None objectID;

	/**
	 * \brief data.
	 */
	public None data;
}
