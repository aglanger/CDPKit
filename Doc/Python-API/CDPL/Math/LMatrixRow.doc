/* -*- mode: java; tab-width: 4 -*- */

package CDPL.Math;

/**
 * \brief LMatrixRow.
 */
public class LMatrixRow extends Boost.Python.instance {

	/**
	 * \brief __init__.
	 * \param self The <tt>%LMatrixRow</tt> instance.
	 */
	public None __init__(object self, LMatrixRow mr) {}

	/**
	 * \brief __init__.
	 * \param self The <tt>%LMatrixRow</tt> instance.
	 */
	public None __init__(object self, LMatrixExpression e, int i) {}

	/**
	 * \brief getObjectID.
	 * \param self The <tt>%LMatrixRow</tt> instance.
	 */
	public int getObjectID(LMatrixRow self) {}

	/**
	 * \brief getSize.
	 * \param self The <tt>%LMatrixRow</tt> instance.
	 */
	public int getSize(LMatrixRow self) {}

	/**
	 * \brief getIndex.
	 * \param self The <tt>%LMatrixRow</tt> instance.
	 */
	public int getIndex(LMatrixRow self) {}

	/**
	 * \brief getElement.
	 * \param self The <tt>%LMatrixRow</tt> instance.
	 */
	public int getElement(LMatrixRow self, int i) {}

	/**
	 * \brief isEmpty.
	 * \param self The <tt>%LMatrixRow</tt> instance.
	 */
	public bool isEmpty(LMatrixRow self) {}

	/**
	 * \brief swap.
	 * \param self The <tt>%LMatrixRow</tt> instance.
	 */
	public None swap(LMatrixRow self, LMatrixRow r) {}

	/**
	 * \brief getData.
	 * \param self The <tt>%LMatrixRow</tt> instance.
	 */
	public LMatrixExpression getData(LMatrixRow self) {}

	/**
	 * \brief setElement.
	 * \param self The <tt>%LMatrixRow</tt> instance.
	 */
	public None setElement(LMatrixRow self, int i, int v) {}

	/**
	 * \brief assign.
	 * \param self The <tt>%LMatrixRow</tt> instance.
	 */
	public LMatrixRow assign(LMatrixRow self, ConstFVectorExpression e) {}

	/**
	 * \brief assign.
	 * \param self The <tt>%LMatrixRow</tt> instance.
	 */
	public LMatrixRow assign(LMatrixRow self, ConstDVectorExpression e) {}

	/**
	 * \brief assign.
	 * \param self The <tt>%LMatrixRow</tt> instance.
	 */
	public LMatrixRow assign(LMatrixRow self, ConstLVectorExpression e) {}

	/**
	 * \brief assign.
	 * \param self The <tt>%LMatrixRow</tt> instance.
	 */
	public LMatrixRow assign(LMatrixRow self, ConstULVectorExpression e) {}

	/**
	 * \brief assign.
	 * \param self The <tt>%LMatrixRow</tt> instance.
	 */
	public LMatrixRow assign(LMatrixRow self, LMatrixRow r) {}

	/**
	 * \brief __isub__.
	 * \param self The <tt>%LMatrixRow</tt> instance.
	 */
	public LMatrixRow __isub__(LMatrixRow self, LMatrixRow r) {}

	/**
	 * \brief __isub__.
	 * \param self The <tt>%LMatrixRow</tt> instance.
	 */
	public LMatrixRow __isub__(LMatrixRow self, ConstLVectorExpression e) {}

	/**
	 * \brief __str__.
	 * \param self The <tt>%LMatrixRow</tt> instance.
	 */
	public str __str__(LMatrixRow self) {}

	/**
	 * \brief __rmul__.
	 * \param self The <tt>%LMatrixRow</tt> instance.
	 */
	public ConstLVectorExpression __rmul__(object self, int t) {}

	/**
	 * \brief __pos__.
	 * \param self The <tt>%LMatrixRow</tt> instance.
	 */
	public LMatrixRow __pos__(LMatrixRow self) {}

	/**
	 * \brief __call__.
	 * \param self The <tt>%LMatrixRow</tt> instance.
	 */
	public int __call__(LMatrixRow self, int i) {}

	/**
	 * \brief __len__.
	 * \param self The <tt>%LMatrixRow</tt> instance.
	 */
	public int __len__(LMatrixRow self) {}

	/**
	 * \brief __neg__.
	 * \param self The <tt>%LMatrixRow</tt> instance.
	 */
	public ConstLVectorExpression __neg__(object self) {}

	/**
	 * \brief __ne__.
	 * \param self The <tt>%LMatrixRow</tt> instance.
	 */
	public bool __ne__(LMatrixRow self, LMatrixRow r) {}

	/**
	 * \brief __ne__.
	 * \param self The <tt>%LMatrixRow</tt> instance.
	 */
	public bool __ne__(LMatrixRow self, ConstLVectorExpression e) {}

	/**
	 * \brief __getitem__.
	 * \param self The <tt>%LMatrixRow</tt> instance.
	 */
	public int __getitem__(LMatrixRow self, int i) {}

	/**
	 * \brief __idiv__.
	 * \param self The <tt>%LMatrixRow</tt> instance.
	 */
	public LMatrixRow __idiv__(LMatrixRow self, int t) {}

	/**
	 * \brief __setitem__.
	 * \param self The <tt>%LMatrixRow</tt> instance.
	 */
	public None __setitem__(LMatrixRow self, int i, int v) {}

	/**
	 * \brief __add__.
	 * \param self The <tt>%LMatrixRow</tt> instance.
	 */
	public ConstLVectorExpression __add__(object self, ConstLVectorExpression e) {}

	/**
	 * \brief __eq__.
	 * \param self The <tt>%LMatrixRow</tt> instance.
	 */
	public bool __eq__(LMatrixRow self, LMatrixRow r) {}

	/**
	 * \brief __eq__.
	 * \param self The <tt>%LMatrixRow</tt> instance.
	 */
	public bool __eq__(LMatrixRow self, ConstLVectorExpression e) {}

	/**
	 * \brief __imul__.
	 * \param self The <tt>%LMatrixRow</tt> instance.
	 */
	public LMatrixRow __imul__(LMatrixRow self, int t) {}

	/**
	 * \brief __iadd__.
	 * \param self The <tt>%LMatrixRow</tt> instance.
	 */
	public LMatrixRow __iadd__(LMatrixRow self, LMatrixRow r) {}

	/**
	 * \brief __iadd__.
	 * \param self The <tt>%LMatrixRow</tt> instance.
	 */
	public LMatrixRow __iadd__(LMatrixRow self, ConstLVectorExpression e) {}

	/**
	 * \brief __div__.
	 * \param self The <tt>%LMatrixRow</tt> instance.
	 */
	public ConstLVectorExpression __div__(object self, int t) {}

	/**
	 * \brief __mul__.
	 * \param self The <tt>%LMatrixRow</tt> instance.
	 */
	public ConstLVectorExpression __mul__(object self, int t) {}

	/**
	 * \brief __sub__.
	 * \param self The <tt>%LMatrixRow</tt> instance.
	 */
	public ConstLVectorExpression __sub__(object self, ConstLVectorExpression e) {}

	/**
	 * \brief objectID.
	 */
	public None objectID;

	/**
	 * \brief size.
	 */
	public None size;

	/**
	 * \brief index.
	 */
	public None index;

	/**
	 * \brief data.
	 */
	public None data;
}
