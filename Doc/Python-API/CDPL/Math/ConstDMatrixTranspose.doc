/* -*- mode: java; tab-width: 4 -*- */

package CDPL.Math;

/**
 * \brief ConstDMatrixTranspose.
 */
public class ConstDMatrixTranspose extends Boost.Python.instance {

	/**
	 * \brief __init__.
	 * \param self The <tt>%ConstDMatrixTranspose</tt> instance.
	 */
	public None __init__(object self, ConstDMatrixTranspose mt) {}

	/**
	 * \brief __init__.
	 * \param self The <tt>%ConstDMatrixTranspose</tt> instance.
	 */
	public None __init__(object self, ConstDMatrixExpression e) {}

	/**
	 * \brief getObjectID.
	 * \param self The <tt>%ConstDMatrixTranspose</tt> instance.
	 */
	public int getObjectID(ConstDMatrixTranspose self) {}

	/**
	 * \brief getElement.
	 * \param self The <tt>%ConstDMatrixTranspose</tt> instance.
	 */
	public float getElement(ConstDMatrixTranspose self, int i, int j) {}

	/**
	 * \brief isEmpty.
	 * \param self The <tt>%ConstDMatrixTranspose</tt> instance.
	 */
	public bool isEmpty(ConstDMatrixTranspose self) {}

	/**
	 * \brief getData.
	 * \param self The <tt>%ConstDMatrixTranspose</tt> instance.
	 */
	public ConstDMatrixExpression getData(ConstDMatrixTranspose self) {}

	/**
	 * \brief getSize1.
	 * \param self The <tt>%ConstDMatrixTranspose</tt> instance.
	 */
	public int getSize1(ConstDMatrixTranspose self) {}

	/**
	 * \brief getSize2.
	 * \param self The <tt>%ConstDMatrixTranspose</tt> instance.
	 */
	public int getSize2(ConstDMatrixTranspose self) {}

	/**
	 * \brief __str__.
	 * \param self The <tt>%ConstDMatrixTranspose</tt> instance.
	 */
	public str __str__(ConstDMatrixTranspose self) {}

	/**
	 * \brief __rmul__.
	 * \param self The <tt>%ConstDMatrixTranspose</tt> instance.
	 */
	public ConstDMatrixExpression __rmul__(object self, float t) {}

	/**
	 * \brief __pos__.
	 * \param self The <tt>%ConstDMatrixTranspose</tt> instance.
	 */
	public ConstDMatrixTranspose __pos__(ConstDMatrixTranspose self) {}

	/**
	 * \brief __call__.
	 * \param self The <tt>%ConstDMatrixTranspose</tt> instance.
	 */
	public float __call__(ConstDMatrixTranspose self, int i, int j) {}

	/**
	 * \brief __len__.
	 * \param self The <tt>%ConstDMatrixTranspose</tt> instance.
	 */
	public int __len__(ConstDMatrixTranspose self) {}

	/**
	 * \brief __mul__.
	 * \param self The <tt>%ConstDMatrixTranspose</tt> instance.
	 */
	public ConstDMatrixExpression __mul__(object self, float t) {}

	/**
	 * \brief __ne__.
	 * \param self The <tt>%ConstDMatrixTranspose</tt> instance.
	 */
	public bool __ne__(ConstDMatrixTranspose self, ConstDMatrixTranspose mt) {}

	/**
	 * \brief __ne__.
	 * \param self The <tt>%ConstDMatrixTranspose</tt> instance.
	 */
	public bool __ne__(ConstDMatrixTranspose self, ConstDMatrixExpression e) {}

	/**
	 * \brief __getitem__.
	 * \param self The <tt>%ConstDMatrixTranspose</tt> instance.
	 */
	public float __getitem__(ConstDMatrixTranspose self, tuple ij) {}

	/**
	 * \brief __add__.
	 * \param self The <tt>%ConstDMatrixTranspose</tt> instance.
	 */
	public ConstDMatrixExpression __add__(object self, ConstDMatrixExpression e) {}

	/**
	 * \brief __eq__.
	 * \param self The <tt>%ConstDMatrixTranspose</tt> instance.
	 */
	public bool __eq__(ConstDMatrixTranspose self, ConstDMatrixTranspose mt) {}

	/**
	 * \brief __eq__.
	 * \param self The <tt>%ConstDMatrixTranspose</tt> instance.
	 */
	public bool __eq__(ConstDMatrixTranspose self, ConstDMatrixExpression e) {}

	/**
	 * \brief __div__.
	 * \param self The <tt>%ConstDMatrixTranspose</tt> instance.
	 */
	public ConstDMatrixExpression __div__(object self, float t) {}

	/**
	 * \brief __neg__.
	 * \param self The <tt>%ConstDMatrixTranspose</tt> instance.
	 */
	public ConstDMatrixExpression __neg__(object self) {}

	/**
	 * \brief __sub__.
	 * \param self The <tt>%ConstDMatrixTranspose</tt> instance.
	 */
	public ConstDMatrixExpression __sub__(object self, ConstDMatrixExpression e) {}

	/**
	 * \brief objectID.
	 */
	public None objectID;

	/**
	 * \brief size1.
	 */
	public None size1;

	/**
	 * \brief data.
	 */
	public None data;

	/**
	 * \brief size2.
	 */
	public None size2;
}
