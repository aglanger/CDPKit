/* -*- mode: java; tab-width: 4 -*- */

package CDPL.Math;

/**
 * \brief LVectorQuaternionAdapter.
 */
public class LVectorQuaternionAdapter extends Boost.Python.instance {

	/**
	 * \brief __init__.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public None __init__(object self, LVectorQuaternionAdapter a) {}

	/**
	 * \brief __init__.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public None __init__(object self, LVectorExpression e) {}

	/**
	 * \brief set.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public None set(LVectorQuaternionAdapter self, int c1 = 0, int c2 = 0, int c3 = 0, int c4 = 0) {}

	/**
	 * \brief getObjectID.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public int getObjectID(LVectorQuaternionAdapter self) {}

	/**
	 * \brief getC4.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public int getC4(LVectorQuaternionAdapter self) {}

	/**
	 * \brief swap.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public None swap(LVectorQuaternionAdapter self, LVectorQuaternionAdapter a) {}

	/**
	 * \brief setC4.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public None setC4(LVectorQuaternionAdapter self, int v) {}

	/**
	 * \brief getData.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public LVectorExpression getData(LVectorQuaternionAdapter self) {}

	/**
	 * \brief setC2.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public None setC2(LVectorQuaternionAdapter self, int v) {}

	/**
	 * \brief getC1.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public int getC1(LVectorQuaternionAdapter self) {}

	/**
	 * \brief getC2.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public int getC2(LVectorQuaternionAdapter self) {}

	/**
	 * \brief getC3.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public int getC3(LVectorQuaternionAdapter self) {}

	/**
	 * \brief setC1.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public None setC1(LVectorQuaternionAdapter self, int v) {}

	/**
	 * \brief setC3.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public None setC3(LVectorQuaternionAdapter self, int v) {}

	/**
	 * \brief assign.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public LVectorQuaternionAdapter assign(LVectorQuaternionAdapter self, ConstFQuaternionExpression e) {}

	/**
	 * \brief assign.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public LVectorQuaternionAdapter assign(LVectorQuaternionAdapter self, ConstDQuaternionExpression e) {}

	/**
	 * \brief assign.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public LVectorQuaternionAdapter assign(LVectorQuaternionAdapter self, ConstLQuaternionExpression e) {}

	/**
	 * \brief assign.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public LVectorQuaternionAdapter assign(LVectorQuaternionAdapter self, ConstULQuaternionExpression e) {}

	/**
	 * \brief assign.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public LVectorQuaternionAdapter assign(LVectorQuaternionAdapter self, LVectorQuaternionAdapter a) {}

	/**
	 * \brief __isub__.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public LVectorQuaternionAdapter __isub__(LVectorQuaternionAdapter self, int t) {}

	/**
	 * \brief __isub__.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public LVectorQuaternionAdapter __isub__(LVectorQuaternionAdapter self, LVectorQuaternionAdapter a) {}

	/**
	 * \brief __isub__.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public LVectorQuaternionAdapter __isub__(LVectorQuaternionAdapter self, ConstLQuaternionExpression q) {}

	/**
	 * \brief __str__.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public str __str__(LVectorQuaternionAdapter self) {}

	/**
	 * \brief __radd__.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public ConstLQuaternionExpression __radd__(object self, int t) {}

	/**
	 * \brief __rsub__.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public ConstLQuaternionExpression __rsub__(object self, int t) {}

	/**
	 * \brief __rdiv__.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public ConstLQuaternionExpression __rdiv__(object self, int t) {}

	/**
	 * \brief __rmul__.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public ConstLQuaternionExpression __rmul__(object self, int t) {}

	/**
	 * \brief __pos__.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public LVectorQuaternionAdapter __pos__(LVectorQuaternionAdapter self) {}

	/**
	 * \brief __mul__.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public ConstLQuaternionExpression __mul__(object self, int t) {}

	/**
	 * \brief __mul__.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public ConstLQuaternionExpression __mul__(object self, ConstLQuaternionExpression e) {}

	/**
	 * \brief __ne__.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public bool __ne__(LVectorQuaternionAdapter self, LVectorQuaternionAdapter a) {}

	/**
	 * \brief __ne__.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public bool __ne__(LVectorQuaternionAdapter self, ConstLQuaternionExpression q) {}

	/**
	 * \brief __idiv__.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public LVectorQuaternionAdapter __idiv__(LVectorQuaternionAdapter self, int t) {}

	/**
	 * \brief __idiv__.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public LVectorQuaternionAdapter __idiv__(LVectorQuaternionAdapter self, LVectorQuaternionAdapter a) {}

	/**
	 * \brief __idiv__.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public LVectorQuaternionAdapter __idiv__(LVectorQuaternionAdapter self, ConstLQuaternionExpression q) {}

	/**
	 * \brief __add__.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public ConstLQuaternionExpression __add__(object self, int t) {}

	/**
	 * \brief __add__.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public ConstLQuaternionExpression __add__(object self, ConstLQuaternionExpression e) {}

	/**
	 * \brief __eq__.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public bool __eq__(LVectorQuaternionAdapter self, LVectorQuaternionAdapter a) {}

	/**
	 * \brief __eq__.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public bool __eq__(LVectorQuaternionAdapter self, ConstLQuaternionExpression q) {}

	/**
	 * \brief __imul__.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public LVectorQuaternionAdapter __imul__(LVectorQuaternionAdapter self, int t) {}

	/**
	 * \brief __imul__.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public LVectorQuaternionAdapter __imul__(LVectorQuaternionAdapter self, LVectorQuaternionAdapter a) {}

	/**
	 * \brief __imul__.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public LVectorQuaternionAdapter __imul__(LVectorQuaternionAdapter self, ConstLQuaternionExpression q) {}

	/**
	 * \brief __iadd__.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public LVectorQuaternionAdapter __iadd__(LVectorQuaternionAdapter self, int t) {}

	/**
	 * \brief __iadd__.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public LVectorQuaternionAdapter __iadd__(LVectorQuaternionAdapter self, LVectorQuaternionAdapter a) {}

	/**
	 * \brief __iadd__.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public LVectorQuaternionAdapter __iadd__(LVectorQuaternionAdapter self, ConstLQuaternionExpression q) {}

	/**
	 * \brief __div__.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public ConstLQuaternionExpression __div__(object self, int t) {}

	/**
	 * \brief __div__.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public ConstLQuaternionExpression __div__(object self, ConstLQuaternionExpression e) {}

	/**
	 * \brief __neg__.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public ConstLQuaternionExpression __neg__(object self) {}

	/**
	 * \brief __sub__.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public ConstLQuaternionExpression __sub__(object self, int t) {}

	/**
	 * \brief __sub__.
	 * \param self The <tt>%LVectorQuaternionAdapter</tt> instance.
	 */
	public ConstLQuaternionExpression __sub__(object self, ConstLQuaternionExpression e) {}

	/**
	 * \brief objectID.
	 */
	public None objectID;

	/**
	 * \brief data.
	 */
	public None data;
}
