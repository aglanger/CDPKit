/* -*- mode: java; tab-width: 4 -*- */

package CDPL.Math;

/**
 * \brief ConstLQuaternionExpression.
 */
public class ConstLQuaternionExpression extends Boost.Python.instance {

	/**
	 * \brief getObjectID.
	 * \param self The <tt>%ConstLQuaternionExpression</tt> instance.
	 */
	public int getObjectID(ConstLQuaternionExpression self) {}

	/**
	 * \brief getC4.
	 * \param self The <tt>%ConstLQuaternionExpression</tt> instance.
	 */
	public int getC4(ConstLQuaternionExpression self) {}

	/**
	 * \brief getC1.
	 * \param self The <tt>%ConstLQuaternionExpression</tt> instance.
	 */
	public int getC1(ConstLQuaternionExpression self) {}

	/**
	 * \brief getC2.
	 * \param self The <tt>%ConstLQuaternionExpression</tt> instance.
	 */
	public int getC2(ConstLQuaternionExpression self) {}

	/**
	 * \brief getC3.
	 * \param self The <tt>%ConstLQuaternionExpression</tt> instance.
	 */
	public int getC3(ConstLQuaternionExpression self) {}

	/**
	 * \brief __str__.
	 * \param self The <tt>%ConstLQuaternionExpression</tt> instance.
	 */
	public str __str__(ConstLQuaternionExpression self) {}

	/**
	 * \brief __radd__.
	 * \param self The <tt>%ConstLQuaternionExpression</tt> instance.
	 */
	public ConstLQuaternionExpression __radd__(object self, int t) {}

	/**
	 * \brief __rsub__.
	 * \param self The <tt>%ConstLQuaternionExpression</tt> instance.
	 */
	public ConstLQuaternionExpression __rsub__(object self, int t) {}

	/**
	 * \brief __rdiv__.
	 * \param self The <tt>%ConstLQuaternionExpression</tt> instance.
	 */
	public ConstLQuaternionExpression __rdiv__(object self, int t) {}

	/**
	 * \brief __rmul__.
	 * \param self The <tt>%ConstLQuaternionExpression</tt> instance.
	 */
	public ConstLQuaternionExpression __rmul__(object self, int t) {}

	/**
	 * \brief __pos__.
	 * \param self The <tt>%ConstLQuaternionExpression</tt> instance.
	 */
	public ConstLQuaternionExpression __pos__(ConstLQuaternionExpression self) {}

	/**
	 * \brief __mul__.
	 * \param self The <tt>%ConstLQuaternionExpression</tt> instance.
	 */
	public ConstLQuaternionExpression __mul__(object self, int t) {}

	/**
	 * \brief __mul__.
	 * \param self The <tt>%ConstLQuaternionExpression</tt> instance.
	 */
	public ConstLQuaternionExpression __mul__(object self, ConstLQuaternionExpression e) {}

	/**
	 * \brief __ne__.
	 * \param self The <tt>%ConstLQuaternionExpression</tt> instance.
	 */
	public bool __ne__(ConstLQuaternionExpression self, ConstLQuaternionExpression e) {}

	/**
	 * \brief __add__.
	 * \param self The <tt>%ConstLQuaternionExpression</tt> instance.
	 */
	public ConstLQuaternionExpression __add__(object self, int t) {}

	/**
	 * \brief __add__.
	 * \param self The <tt>%ConstLQuaternionExpression</tt> instance.
	 */
	public ConstLQuaternionExpression __add__(object self, ConstLQuaternionExpression e) {}

	/**
	 * \brief __eq__.
	 * \param self The <tt>%ConstLQuaternionExpression</tt> instance.
	 */
	public bool __eq__(ConstLQuaternionExpression self, ConstLQuaternionExpression e) {}

	/**
	 * \brief __div__.
	 * \param self The <tt>%ConstLQuaternionExpression</tt> instance.
	 */
	public ConstLQuaternionExpression __div__(object self, int t) {}

	/**
	 * \brief __div__.
	 * \param self The <tt>%ConstLQuaternionExpression</tt> instance.
	 */
	public ConstLQuaternionExpression __div__(object self, ConstLQuaternionExpression e) {}

	/**
	 * \brief __neg__.
	 * \param self The <tt>%ConstLQuaternionExpression</tt> instance.
	 */
	public ConstLQuaternionExpression __neg__(object self) {}

	/**
	 * \brief __sub__.
	 * \param self The <tt>%ConstLQuaternionExpression</tt> instance.
	 */
	public ConstLQuaternionExpression __sub__(object self, int t) {}

	/**
	 * \brief __sub__.
	 * \param self The <tt>%ConstLQuaternionExpression</tt> instance.
	 */
	public ConstLQuaternionExpression __sub__(object self, ConstLQuaternionExpression e) {}

	/**
	 * \brief objectID.
	 */
	public None objectID;
}
